{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u306f\u3058\u3081\u306b","text":"<p>Warning</p> <p>\u3053\u306e\u30b5\u30a4\u30c8\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u5185\u5bb9\u306f\u79c1\u81ea\u8eab\u306e\u898b\u89e3\u3067\u3042\u308a\u3001\u5fc5\u305a\u3057\u3082\u79c1\u306e\u6240\u5c5e\u7d44\u7e54\u30fb\u4f01\u696d\u306e\u7acb\u5834\u3001\u6226\u7565\u3001\u610f\u898b\u3092\u4ee3\u8868\u3059\u308b\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u516c\u958b\u60c5\u5831\u304a\u3088\u3073\u8457\u8005\u306b\u3088\u308b\u691c\u8a3c\u74b0\u5883\u3092\u30d9\u30fc\u30b9\u306b\u57f7\u7b46\u3057\u3066\u304a\u308a\u307e\u3059\u304c\u3001\u8aa4\u89e3\u30fb\u8aa4\u690d\u3092\u542b\u3093\u3067\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u3054\u5229\u7528\u306e\u969b\u306f\u81ea\u5df1\u8cac\u4efb\u3067\u5fc5\u305a\u6700\u65b0\u306e\u60c5\u5831\u3092\u81ea\u3089\u78ba\u8a8d\u3055\u308c\u307e\u3059\u3088\u3046\u304a\u9858\u3044\u3057\u307e\u3059\u3002</p>"},{"location":"#_1","title":"\u306f\u3058\u3081\u306b","text":""},{"location":"instana_synthetic_monitoring/","title":"Synthetic Monitoring","text":"<p>\u5916\u5f62\u76e3\u8996\u3092\u8af8\u3005\u8a66\u3057\u3066\u3044\u304f\u30e1\u30e2\u3002</p>"},{"location":"instana_synthetic_monitoring/#pop","title":"PoP\u30b5\u30fc\u30d0\u30fc\u306e\u6e96\u5099","text":"<p>\u5916\u5f62\u76e3\u8996\u306f\u3001InstanaBackend \u2192 PoP\u30b5\u30fc\u30d0\u30fc \u2192 \u76e3\u8996\u3057\u305f\u3044\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3068\u3044\u3046\u6d41\u308c\u3067\u5b9f\u65bd\u3055\u308c\u308b\u3002\u305d\u306e\u305f\u3081PoP\u30b5\u30fc\u30d0\u30fc\u306fInstana\u3068\u306f\u5225\u3067\u7528\u610f\u3059\u308b\u5fc5\u8981\u3042\u308a\u3002</p>"},{"location":"instana_synthetic_monitoring/#kubernetesgke","title":"Kubernetes\u3092\u6e96\u5099\u3059\u308b(\u4eca\u56de\u306fGKE)","text":"<p>\u60b2\u3057\u3044\u3053\u3068\u306b\u3001IBM Cloud\u306e\u7121\u511f\u30af\u30e9\u30b9\u30bf\u30fc\u306f2023\u5e747\u6708\u672b\u3067\u7d42\u4e86\u3057\u3066\u3057\u307e\u3063\u305f\u305d\u3046\u3067\u3059\u3002\u3002\u3002\u3002 \u81ea\u5206\u306e\u304a\u91d1\u306f\u4ed5\u4e8b\u3067\u306f\u4f7f\u3044\u305f\u304f\u306a\u3044\u306e\u3067\u3001\u7121\u511f\u3067\u4f7f\u3048\u308bKubernetes\u74b0\u5883\u3092\u7528\u610f\u3057\u307e\u3059\u3002\u591a\u5206minikube\u3067\u3082\u5927\u4e08\u592b\u3067\u3059\u304c\u3001GKE\u3092\u7528\u610f\u3057\u3066\u3044\u304d\u307e\u3059\u3002</p> <p>\u4ee5\u4e0b\u3001\u624b\u9806 1. gcp\u30c8\u30e9\u30a4\u30a2\u30eb\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u7528\u610f 2. gcp\u306ecli\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 3. CLI\u3067GKE\u3092\u69cb\u7bc9\u3057\u3066\u3044\u304f</p>"},{"location":"instana_synthetic_monitoring/#1-gcp","title":"1. gcp\u30c8\u30e9\u30a4\u30a2\u30eb\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u7528\u610f","text":"<p>\u3053\u308c\u306f\u5404\u81ea\u5b9f\u65bd\u3057\u3066\u304f\u3060\u3055\u3044\u30023\u30f6\u6708\u9593\u3001300\u30c9\u30eb\u4f7f\u3044\u305f\u3044\u653e\u984c\u306e\u305f\u3081\u7121\u6599\u3067\u904a\u3079\u307e\u3059\u3002</p>"},{"location":"instana_synthetic_monitoring/#2-gcpcli","title":"2. gcp\u306ecli\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>\u3053\u306e\u3042\u3068\u5fc5\u8981\u306b\u306a\u308b\u3084\u3064\u3082\u4e00\u7dd2\u306b\u3044\u308c\u3066\u304a\u304f\u3002 <pre><code>gcloud components install gke-gcloud-auth-plugin\n</code></pre></p>"},{"location":"instana_synthetic_monitoring/#cligke","title":"CLI\u3067GKE\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b","text":"<p>\u6700\u521d\u306bProject_ID\u3068Region\u3092\u74b0\u5883\u5909\u6570\u306b\u3057\u3066\u304a\u304f\u3002 <pre><code>export REGION=us-west1\nexport PROJECT_ID=&lt;ProjectID&gt;\n</code></pre> \u4ee5\u4e0b\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068GKE\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002container clusters create-auto</p> <pre><code>\u2500 gcloud container clusters create-auto hello-cluster --region ${REGION} --project=${PROJECT_ID}\n</code></pre> <p>10\u5206\u5f31\u304b\u304b\u3063\u305f\u3002\u8868\u793a\u3055\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u306b\u3057\u305f\u304c\u3044\u3001gke\u306e\u8a8d\u8a3c\u3092\u30b2\u30c3\u30c8\u3059\u308b\u3002</p> <pre><code>gcloud container clusters get-credentials hello-cluster --region ${REGION}\n</code></pre> <p>get node\u3067\u63a5\u7d9a\u3067\u304d\u305f\u304b\u78ba\u8a8d\u3059\u308b\u3002 <pre><code>&gt; kubectl get node\nNAME                                           STATUS   ROLES    AGE     VERSION\ngk3-hello-cluster-default-pool-b8522c1c-dhfg   Ready    &lt;none&gt;   7m54s   v1.27.3-gke.100\n</code></pre></p>"},{"location":"instana_synthetic_monitoring/#pophelm","title":"PoP\u3092Helm\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>Info</p> <p>\u3053\u306e\u624b\u9806\u306f\u3042\u3066\u3067Ansible Playbook\u306b\u3059\u308b\u3002</p> <p>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308bnamespace\u3092\u4f5c\u6210\u3059\u308b\u3002 <pre><code>kubectl create namespace instana-pop\n</code></pre> \u203b helm\u3067namespace\u4f5c\u6210\u3082\u3067\u304d\u308b\u3002</p> <p><pre><code>helm install synthetic-pop \\\n    --repo \"https://agents.instana.io/helm\" \\\n    --namespace instana-pop \\\n    --set downloadKey=\"uBp4GXpZQpKrHxMXNcvInQ\" \\\n    --set controller.location=\"CSM-Japan;CSM-Japan;Japan;Chiba;0;0;\u4f50\u5ddd\u306e\u30c6\u30b9\u30c8\u7528\" \\\n    --set controller.clusterName=\"csm-sagawa-pop\" \\\n    --set controller.instanaKey=\"uBp4GXpZQpKrHxMXNcvInQ\" \\\n    --set controller.instanaSyntheticEndpoint=\"https://synthetics-orange-saas.instana.io\" \\\n    --set redis.tls.enabled=false \\\n    --set redis.password=\"ohgo0805\" \\\n    synthetic-pop\n</code></pre> \u7d50\u679c <pre><code>NAME: synthetic-pop\nLAST DEPLOYED: Thu Aug 24 17:11:51 2023\nNAMESPACE: instana-pop\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\nCHART NAME: synthetic-pop\nCHART VERSION: 1.0.15\nAPP VERSION: 1.256.0\n</code></pre></p> <p>\u3044\u3061\u304a\u3046kubectl get po\u3059\u308b <pre><code>\u276f kubectl get pod -n instana-pop\nNAME                                                           READY   STATUS    RESTARTS   AGE\nsynthetic-pop-browserscript-playback-engine-744fbdc6b6-d924d   1/1     Running   0          111s\nsynthetic-pop-controller-74ccbc7c-vx2gz                        0/1     Running   0          111s\nsynthetic-pop-http-playback-engine-9756dcd5d-2qldk             1/1     Running   0          111s\nsynthetic-pop-javascript-playback-engine-5bdf57bdd6-tckkl      1/1     Running   0          111s\nsynthetic-pop-redis-57c9bbd7db-qk9pj\n</code></pre></p> <p></p>"},{"location":"instana_synthetic_monitoring/#gkeagentinstall","title":"GKE\u306bAgent\u3092Install\u3059\u308b","text":"<p>\u5916\u5f62\u76e3\u8996\u3068\u3057\u3066\u5fc5\u8981\u306a\u308f\u3051\u3067\u306f\u306a\u3044\u304c\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067Agent\u3082\u3044\u308c\u3066\u304a\u304f\u3002Helm\u3067cluster\u540d\u3068zone\u3092\u4efb\u610f\u306b\u8a2d\u5b9a\u3002</p> <pre><code>   helm install instana-agent \\\n   --repo https://agents.instana.io/helm \\\n   --namespace instana-agent \\\n   --create-namespace \\\n   --set agent.key=uBp4GXpZQpKrHxMXNcvInQ \\\n   --set agent.downloadKey=uBp4GXpZQpKrHxMXNcvInQ \\\n   --set agent.endpointHost=ingress-orange-saas.instana.io \\\n   --set agent.endpointPort=443 \\\n   --set cluster.name='csmj-3-gke-free' \\\n   --set zone.name='csmj-3' \\\n   instana-agent\n</code></pre> <p>\u3059\u3050\u306bsandbox\u304b\u3089\u78ba\u8a8d\u3067\u304d\u305f\u3002 </p> <p>\u30a8\u30e9\u30fc\u3002MasterNode\u306b\u4f55\u304b\u3057\u3088\u3046\u3068\u3057\u305f\u304b\u3089\uff1fdaemonset\u306f\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3066\u305f\u3002\u4f55\u304b\u4e0d\u5177\u5408\u304c\u304a\u3053\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3042\u3068\u3067\u78ba\u8a8d\u3059\u308b <pre><code>W0830 01:57:18.364062   70659 warnings.go:70] autopilot-default-resources-mutator:Autopilot updated DaemonSet instana-agent/instana-agent: adjusted resources to meet requirements for containers [instana-agent] (see http://g.co/gke/autopilot-resources)\nW0830 01:57:18.513994   70659 warnings.go:70] autopilot-default-resources-mutator:Autopilot updated Deployment instana-agent/k8sensor: adjusted resources to meet requirements for containers [instana-agent] (see http://g.co/gke/autopilot-resources)\nError: INSTALLATION FAILED: 1 error occurred:\n    * admission webhook \"warden-validating.common-webhooks.networking.gke.io\" denied the request: GKE Warden rejected the request because it violates one or more constraints.\nViolations details: {\"[denied by autogke-disallow-hostnamespaces]\":[\"enabling hostNetwork is not allowed in Autopilot.\",\"enabling hostPID is not allowed in Autopilot.\"],\"[denied by autogke-disallow-privilege]\":[\"container instana-agent is privileged; not allowed in Autopilot\"],\"[denied by autogke-no-host-port]\":[\"container instana-agent specifies host ports [42699], which are disallowed in Autopilot.\"],\"[denied by autogke-no-write-mode-hostpath]\":[\"hostPath volume dev in container instana-agent is accessed in write mode; disallowed in Autopilot.\",\"hostPath volume run in container instana-agent is accessed in write mode; disallowed in Autopilot.\",\"hostPath volume var-run in container instana-agent is accessed in write mode; disallowed in Autopilot.\",\"hostPath volume var-run-kubo in container instana-agent is accessed in write mode; disallowed in Autopilot.\",\"hostPath volume var-run-containerd in container instana-agent is accessed in write mode; disallowed in Autopilot.\",\"hostPath volume var-containerd-config in container instana-agent is accessed in write mode; disallowed in Autopilot.\",\"hostPath volume sys in container instana-agent is accessed in write mode; disallowed in Autopilot.\",\"hostPath volume var-log in container instana-agent is accessed in write mode; disallowed in Autopilot.\",\"hostPath volume var-lib in container instana-agent is accessed in write mode; disallowed in Autopilot.\",\"hostPath volume var-data in container instana-agent is accessed in write mode; disallowed in Autopilot.\",\"hostPath volume machine-id in container instana-agent is accessed in write mode; disallowed in Autopilot.\"]}\nRequested by user: 'chailatte915@gmail.com', groups: 'system:authenticated'.\n</code></pre></p>"},{"location":"instana_synthetic_monitoring/#try-browser-simple","title":"Try Browser Simple","text":"<ul> <li>When to use?   \u30b7\u30f3\u30d7\u30eb\u30c6\u30b9\u30c8\u306f\u3001HTTP\u30a8\u30e9\u30fc\u78ba\u8a8d\u306e\u305f\u30811\u3064\u306e\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u304d\u306b\u4f7f\u3046\u3002  </li> <li>Tips  </li> <li>\u4f5c\u308a\u305f\u3044\u30c6\u30b9\u30c8\u306e\u7a2e\u985e\u3092\u9078\u3076  </li> <li>web\u30da\u30fc\u30b8\u306eurl\u3092\u5165\u529b\u3057\u3001PoP\u306e\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u9078\u3076  </li> <li>\u30c6\u30b9\u30c8\u983b\u5ea6\u3092\u9078\u3076  </li> </ul> <p>\u3053\u308c\u306f\u7c21\u5358\u3002web\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3068\u304d\u306b200\u3067\u8fd4\u3063\u3066\u304f\u308b\u304b\u3069\u3046\u304b\u3092\u898b\u308b\u3060\u3051\u3002\u3002\u8868\u793a\u304c\u5d29\u308c\u3066\u306a\u3044\u304b\uff1f\u4e00\u90e8\u306e\u30c7\u30fc\u30bf\u304c\u53d6\u5f97\u3067\u304d\u3066\u3044\u306a\u304b\u3063\u305f\u308a\u3057\u306a\u3044\u304b\uff1f\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u304d\u306f\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u30c6\u30b9\u30c8\u3092\u4f7f\u3046\u3002</p>"},{"location":"instana_synthetic_monitoring/#try-script-test","title":"Try Script Test","text":"<p>Node.js\u30d9\u30fc\u30b9\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3084Selenium\u30d9\u30fc\u30b9\u306eAPI\u3092\u4f7f\u7528\u3057\u3066\u3001Instana\u3067\u30d6\u30e9\u30a6\u30b6\u30c6\u30b9\u30c8\u304c\u3067\u304d\u308b\u3002\u4e88\u3081\u5b9a\u7fa9\u3055\u308c\u305f\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3084Instana\u30d6\u30e9\u30a6\u30b6\u30c6\u30b9\u30c6\u30a3\u30f3\u30b0API\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30a6\u30a7\u30d6\u30d6\u30e9\u30a6\u30b6\u5185\u3067\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u64cd\u4f5c\u3092\u6a21\u5023\u3057\u305f\u30d6\u30e9\u30a6\u30b6\u30b9\u30af\u30ea\u30d7\u30c8\u30c6\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3001\u5b9f\u884c\u3067\u304d\u308b\u3002  </p> <p>\u300c\u3053\u308c\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u66f8\u3051\u306a\u3044\u3068\u4f55\u3082\u3067\u304d\u306a\u3044\u306a...\u3002\u300d\u3068\u601d\u3063\u305f\u305d\u3053\u306e\u3042\u306a\u305f\uff01\uff01instana\u306f\u30b3\u30fc\u30c9\u30b5\u30f3\u30d7\u30eb\u3092\u305f\u30fc\u304f\u3055\u3093\u7528\u610f\u3057\u3066\u3044\u307e\u3059\uff01</p> <p>\u30b5\u30f3\u30d7\u30eb\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9</p> <p>\u307e\u305a\u306f\u30b5\u30f3\u30d7\u30eb\u306e\u4e2d\u306b\u3042\u3063\u305f\u3001IBM\u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u306b\u5bfe\u3057\u3066\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u89e3\u3044\u3066\u3044\u304d\u307e\u3059</p> <pre><code>const { assert } = require(\"chai\");\nlet click = async (message, by, timeout = 60000) =&gt; {\nconsole.log(`Click on ${message} &gt;&gt; ${by} &lt;&lt; `);\ntry {\nconst element = await $browser.waitForAndFindElement(by, timeout);\nconst out = $browser.actions().move({ origin: element }).press().release().perform();\nreturn out;\n} catch (err) {\nconsole.error(`\\ncatch(click): ${err.message}`);\nawait $browser.takeScreenshot();\nthrow err;\n}\n};\nlet scrollToViewAndClick = async (message, by, timeout = 60000) =&gt; {\ntry {\nconst element = await $browser.waitForAndFindElement(by, timeout);\nconsole.log(\"Scroll down to \", message)\nawait $browser.executeScript(\"arguments[0].scrollIntoView()\", element);\nconsole.log(\"Click \", message);\nawait $browser.executeScript(\"arguments[0].click();\", element);\n} catch (err) {\nconsole.error(`\\ncatch(scrollToViewAndClick): ${err.message}`);\nawait $browser.takeScreenshot();\nthrow err;\n}\n}\n(async function () {\nawait $browser.get(\"https://www.ibm.com/us-en\");\nconsole.log(\"Step1: Accept all cookies\");\nconst cookies = await $browser.waitForAndFindElement(\n$driver.By.id(`truste-consent-button`),\n30000\n);\nawait cookies.click();\nconsole.log(\"Step2: Scroll down to developer education link and navigate to it\");\nawait scrollToViewAndClick('developer link', $driver.By.linkText(`Developer education`), 30000);\nconsole.log(\"Assert page title\");\nawait $browser.waitForAndFindElement($driver.By.css(`h1 &gt; strong`), 30000);\nassert.equal(\"Home - IBM Developer\", await $browser.getTitle());\nconsole.log(\"Step3: I want to learn Node.js\");\nawait click(\"programming tab\", $driver.By.css(`#tab-link-3-default`), 10000);\nawait scrollToViewAndClick('Get started with Node.js', $driver.By.css(`#tab-panel-3-default &gt; div:nth-child(1) &gt; div:nth-child(2) &gt; div:nth-child(1) &gt; a:nth-child(1) &gt; div:nth-child(2)`), 10000);\nconsole.log(\"Step4: Move to Node.js summary\");\nawait scrollToViewAndClick('Summary',  $driver.By.linkText(`Summary`), 10000)\n})();\n</code></pre> <p>ee the following playback engines that support different Synthetic test types:</p> <p>HTTP playback engine: Used to run the API Simple test (type: HTTPAction). JavaScript playback engine: Used to run the API Script test (type: HTTPScript). BrowserScript playback engine: Used to run the BrowserScript test (type: BrowserScript), Webpage Simple test (type: WebpageAction), and WebpageScript test (type: WebpageScript).  Deployment Option Synthetic PoP can be deployed only by the Helm charts.</p> <p>The official Helm repository URL is https://agents.instana.io/helm, and the chart name is synthetic-pop. The Helm chart Git repository URL is https://github.com/instana/synthetic-pop-charts.  Prerequisites Synthetic PoP needs to be deployed in a Kubernetes cluster. Use the helm chart to deploy Synthetic PoP, and ensure that Kubernetes and helm are installed in your environment.</p> <p>Set up a Kubernetes cluster where the PoP will be installed. The minimum supported version for the kubernetes distribution is 1.10. For more information, see Set up Kubernetes. Install Helm, and Helm V3 is recommended. For more information, see Installing Helm. The minimum physical requirement to install the Synthetic PoP in the Kubernetes cluster is 3.1 core CPU and 2.7 GB memory.</p> <p>Install  Helm Install Use the helm install command to install a new Synthetic PoP, and pass the following values. You are suggested to install the PoP in a separate namespace.</p> <p>downloadKey: The download agent key for pulling image from containers.instana.io Docker registry. controller.location: The format is label; displayLabel; country; city; latitude; longitude; description. This label acts as the PoP identifier and can only contain letter, number, hyphen and underscore. controller.instanaKey: The Instana agent key, which is used for connecting to Instana backend. controller.instanaSyntheticEndpoint: The ingress endpoint of synthetic acceptor in Instana backend. controller.clusterName: Optionally. It needs to be set with the name of the Kubernetes cluster that is to be displayed in the Instana UI when Instana agent is installed to monitor this PoP. redis.password: The authentication password to redis server. Specify a password with length at least 10. redis.tls.enabled: Define if enabling Redis TLS or not (default false). If the value is true, the communication with Redis will be encrypted with TLS. redis.tls.secretName: If the value of the redis.tls.enabled field is true, you need to specify a secret name for Redis TLS key/cert files. Sign in to Instana UI, click Synthetic Monitoring, and then click Deploy a PoP. Copy the values of downloadKey, controller.instanaKey and controller.instanaSyntheticEndpoint.</p> <p>To configure the installation, specify the values in the command line by using the --set flag, or provide a yaml file with your values by using the -f flag.</p> <p>In the following example, a PoP is deployed, and Redis uses password for authentication.</p> <p>helm install synthetic-pop \\     --repo https://agents.instana.io/helm  \\     --namespace syn \\     --create-namespace \\     --set downloadKey=\"yourdownloadkey\" \\     --set controller.location=\"MyPoP;My PoP;China;Beijing;39.54;116.23;This is a testing Synthetic Point of Presence\" \\     --set controller.instanaKey=\"instanaAgentkey\" \\     --set controller.instanaSyntheticEndpoint=\"https://synthetics-green-saas.instana.io\" \\     --set redis.tls.enabled=false \\     --set redis.password=\"a1fc5d01bcbb\" \\     synthetic-pop</p> <p>You can also provide your values.yaml to deploy a PoP, below examples shows how to get the values.yaml template and then pass the modified yaml file to deploy a PoP.</p> <p>helm repo add synthetic-pop-repo https://agents.instana.io/helm helm repo update helm pull synthetic-pop-repo/synthetic-pop tar xzvf synthetic-pop-*.tgz</p>"},{"location":"instana_synthetic_monitoring/#modify-the-synthetic-popvaluesyaml-file","title":"Modify the synthetic-pop/values.yaml file","text":""},{"location":"instana_synthetic_monitoring/#run-helm-install-to-pass-the-modified-valuesyaml","title":"Run helm install to pass the modified values.yaml","text":"<p>helm install synthetic-pop \\     --repo https://agents.instana.io/helm  \\     --namespace syn \\     --create-namespace \\     -f /path/to/values.yaml \\     synthetic-pop</p> <p>After PoP is installed, make sure that each pod is in Running and Ready status.</p> <p>kubectl get pod -n syn</p> <p>Sign in to Instana UI, click Synthetic _Monitoring &gt; Locations, and then you can see your location is showed up in the location list. If not, go to the Troubleshooting section to check the log files.</p> <p>Security Enhancement The following configurations are recommended for security enhancement in production environment.</p> <p>TLS encryption PoP controller and different playback engines communicate through Redis server, and PoP controller provides an endpoint for health check. You can configure TLS to encrypt the communication through Redis TLS and encrypt the endpoint of PoP controller through HTTPS.</p> <p>To configure TLS, you need to have your X.509 certificate-key pair (tls.crt, tls.key) and Certificate Authority (CA) root certificate file (ca.crt). If you do not have your key and certificate files, you can also use the openssl command to generate new ones. See the following examples:</p> <p>openssl genrsa -out tls.key 4096 openssl req -x509 -new -nodes -sha256 -key tls.key -days 3650 -subj '/O=Instana/CN=Certificate Authority' -out ca.crt openssl req -new -sha256 -key tls.key -subj '/O=Instana/CN=Server' | openssl x509 -req -sha256 -CA ca.crt -CAkey tls.key -CAserial ca.txt -CAcreateserial -days 3650 -out tls.crt</p> <p>After key/cert files are provided, use the kubectl command to create a secret.</p>"},{"location":"instana_synthetic_monitoring/#create-a-new-tls-secret-named-pop-tls-secret-with-the-given-keycert-files","title":"Create a new TLS secret named pop-tls-secret with the given key/cert files","text":"<p>kubectl create secret generic pop-tls-secret -n syn \\ --type='kubernetes.io/tls' \\ --from-file=ca.crt=path/to/ca.crt \\ --from-file=tls.crt=path/to/tls.crt \\ --from-file=tls.key=path/to/tls.key</p> <p>To deploy a PoP to support TLS, run the following command:</p> <p>helm install synthetic-pop \\     --repo https://agents.instana.io/helm \\     --namespace syn \\     --create-namespace \\     --set downloadKey=\"yourdownloadkey\" \\     --set controller.location=\"MyPoP;My PoP;China;Beijing;39.54;116.23;This is a testing Synthetic Point of Presence\" \\     --set controller.instanaKey=\"instanaAgentkey\" \\     --set controller.instanaSyntheticEndpoint=\"https://synthetics-green-saas.instana.io\" \\     --set redis.tls.enabled=true \\     --set redis.tls.secretName=\"pop-tls-secret\" \\     synthetic-pop</p> <p>Secure Computing Mode You can use secure computing mode (or seccomp) to sandbox the privileges of a process, which restricts the calls from user space into the kernel. Use the following parameter to enable RuntimeDefault as default seccomp profile for all containers.</p> <p>Note: The default seccomp profile works only for Kubernetes version 1.19 or later or OCP (OpenShift Container Platform) version 4.11 or later. If seccompDefault is not set to true for OCP 4.11 or later, you can see some warning messages when you run the helm installation.</p> <p>helm install synthetic-pop \\     --repo https://agents.instana.io/helm \\     --namespace syn \\    ...     --set seccompDefault=true \\     synthetic-pop</p> <p>Network Policy By using the network policy, you can specify how a pod is allowed to communicate with the network. To block access from PoP to specific IPs or IP ranges, you can enable and customize the playbackEngineNetworkPolicy parameter. Typically, you can collect the following IP addresses:</p> <p>Cloud provider metadata service IP address: It is 169.254.169.254 for AWS Metadata API, Google Cloud Metadata API, Azure Metadata API. Kubernetes API server IP address: Use the kubectl command to collect Kubernetes API server IP address. See the following example for microk8s or minikube Kubernetes cluster:</p>"},{"location":"instana_synthetic_monitoring/#use-the-following-command-to-print-apiserver-endpoint","title":"Use the following command to print apiserver endpoint","text":""},{"location":"instana_synthetic_monitoring/#for-example-if-the-following-command-prints-endpoints-10128012716443-you-need-to-block-the-ip-address-101280127","title":"For example, if the following command prints \"Endpoints: 10.128.0.127:16443\", you need to block the IP address 10.128.0.127","text":"<p>kubectl describe service kubernetes</p> <p>Then, modify the file values.yaml in helm charts as follows to enable Egress rules to block the IP addresses that you collect.</p> <p>playbackEngineNetworkPolicy:   # Change the value to true to enable the network policy   enabled: true   egress:     - to:         - ipBlock:             # Allow all IP address v4             cidr: 0.0.0.0/0             except:               # Block Kubernetes API server IP address               - 10.128.0.127/32               # Block cloud provider metadata service IP address               - 169.254.169.254/32</p> <p>See the following example to pass network policy by using --set:</p>"},{"location":"instana_synthetic_monitoring/#-set-json-only-be-supported-since-helm-v311","title":"--set-json only be supported since Helm V3.11","text":"<p>helm install synthetic-pop \\     --repo https://agents.instana.io/helm \\     --namespace syn \\    ...     --set playbackEngineNetworkPolicy.enabled=true \\     --set-json 'playbackEngineNetworkPolicy.egress=[{\"to\":[{\"ipBlock\":{\"cidr\":\"0.0.0.0/0\",\"except\":[\"10.128.0.127/32\",\"169.254.169.254/32\"]}}]}]' \\     synthetic-pop</p> <p>Migration Scenario To support the backend migration scenario, you can specify multiple synthetic acceptor endpoints and Instana agent keys with semicolon. Instana agent keys and synthetic acceptor endpoints are one-to-one correspondence. During the migration period, Synthetic PoP can send data to both old and new backend to avoid downtime.</p> <p>See the following example:</p> <p>helm install synthetic-pop \\     --repo https://agents.instana.io/helm \\     --namespace syn \\     --set controller.instanaKey=\"instanaAgentkey;anotherInstanaAgentKey\" \\     --set controller.instanaSyntheticEndpoint=\"https://synthetics-green-saas.instana.io;https://synthetics-green-saas.instana.host\" \\     ...</p> <p>Upgrade Use the helm upgrade command to update a Synthetic PoP. See the following example. You can change the parameters as needed.</p> <p>helm upgrade synthetic-pop \\     --repo https://agents.instana.io/helm \\     --namespace syn \\     --set downloadKey=\"yourdownloadkey\" \\     --set controller.location=\"MyPoP;My PoP;China;Beijing;39.54;116.23;This is a testing Synthetic Point of Presence\" \\     --set controller.instanaKey=\"instanaAgentkey\" \\     --set controller.instanaSyntheticEndpoint=\"https://synthetics-green-saas.instana.io\" \\     --set redis.tls.enabled=false \\     --set redis.password=\"a1fc5d01bcbb\" \\     synthetic-pop</p> <p>Note:</p> <p>The label value in the location parameter is an identifier of the PoP, and not allowed to change. You are recommended to change the displayLabel value as you want. The redis password is not allowed to update. If you really need to change it, uninstall it and then reinstall it with updated redis password.  Uninstall Use the helm uninstall command to uninstall a Synthetic PoP.</p> <p>helm uninstall synthetic-pop -n syn</p> <p>Note: After the PoP is uninstalled, the PoP's location is still shown in the Instana UI with offline status. You can reinstall the PoP with the same location to make the location online again, or delete the location on UI if you do not use it anymore.</p> <p>More Configuration Options  Playback engine enablement By default, three playback engines are enabled and deployed. You can disable some of them based on your requirement. For example, if you do not need Browser tests, you can disable the BrowserScript playback engine by passing the following parameter to reduce the required CPU and memory resources for your Synthetic PoP.</p> <p>--set browserscript.enabled=false</p> <p>Scalability Currently, only playback engines support horizontal scalability, and PoP Controller and Redis don't support horizontal scalability yet. The PoP workload is mainly on the playback engine pods. So to support more workload on a certain type of test, just increase the replicas number in the values.yaml file.</p> <p>The following example shows that the replicas of JavaScript playback engine are increased to 2 and replicas of BrowserScript playback engine are increased to 3.</p> <p>--set javascript.replicas=2 --set browserscript.replicas=3</p> <p>Capabilities The controller.capabilities property defines the playback capabilities for the Synthetic PoP, including the supported Synthetic test and web browser types.</p> <p>CustomProperties The controller.customProperties property defines the customized tags or properties for this PoP. The property is a list of key:value pairs, separated by a semicolon, such as key1=value1;key2=value2.</p> <p>Use an API such as $env.key1 to access the custom property or tag in an API or browser script.</p> <p>Proxy You can configure a proxy server for synthetic PoP to connect the Instana backend server. The following options are supported.</p> <p>proxy.popProxyProtocol: the protocol used by the proxy server. Set the value to http or socks. proxy.popProxyServer: the proxy server address in the ipaddress:port format. proxy.popProxyUserPass: the username and password to authenticate the proxy server. Enter the username and password in the username:password format. Note: To configure the proxy server for Synthetic PoP to connect to the services that are being monitored, you can use the $network API to set a proxy server in the API script.</p> <p>Using external secrets If you don't want to use Helm chart to create new secrets for the keys controller.instanaKey, redis.password, proxy.popProxyUserPass, and downloadKey, you can use the existing secrets that you have created for the Synthetic PoP deployment by specifying the secret names as follows:</p> <p>helm install synthetic-pop \\     --repo https://agents.instana.io/helm \\     --namespace syn \\     --set downloadSecret=\"my-pull-secret\" \\     --set controller.instanaKeySecret=\"my-pop-secret\" \\     --set redis.passwordSecret=\"my-pop-secret\"       --set proxy.popProxyUserPassSecret=\"my-pop-secret\" \\     ...</p> <p>For the keys controller.instanaKey, redis.password, and proxy.popProxyUserPass, you can use the same secret or different existing secrets. However, when you create the secret, you must use the specified key fields instana-key, redis-password, and proxy-user-pass as follows:</p> <p>kubectl create secret generic my-pop-secret  --namespace  \\  --from-literal=instana-key=''  \\  --from-literal=redis-password=''  \\  --from-literal=proxy-user-pass=''   <p>Note: You need to replace  with the namespace that you use to install the Synthetic PoP. <p>The secret for the downloadKey key must use the kubernetes.io/dockerconfigjson type. You can create the secret with the kubernetes.io/dockerconfigjson type as follows:</p> <p>kubectl create secret docker-registry my-pull-secret --namespace  --docker-server=\"https://containers.instana.io\" --docker-username=\"_\" --docker-password=\"\"  <p>Notes:</p> <p>Replace  with the namespace that you use to install the Synthetic PoP. Don't change the value of the --docker-username argument. Replace  with the Instana download key.  Monitoring To monitor your Synthetic PoP, you are suggested to install the Instana host agent on the Kubernetes cluster where your PoP is installed. <p>Synthetic PoP sensor is automatically installed to monitor your PoP after the Instana host agent is installed. You can view the metrics in the Instana UI and get alerts if any health issue happens for your Synthetic PoP.</p> <p>Performance Check the default hardware requirements for running a Synthetic PoP:</p> <p>CPU (vCPU/Core): 3.1 up to 5.6 Memory: 2700 Mi up to 4100 Mi To check how many CPU and memory resources are allocated to each Pod of Synthetic PoP, check the requests and limits numbers in the resources sections for each Pod in the values.yaml file.</p> <p>If you use the default CPU and memory resource allocation for a Synthetic PoP, then you can run 2000 API Simple tests, 20 API Scripts, and 5 BrowserScript tests in the performance benchmark testing with the following test configuration:</p> <p>API simple test: Test frequency is 1 minute, and duration is around 200ms. API script test: Test frequency is 1 minute, the script contains 5 HTTP calls, and the total duration is around 800ms. BrowserScript test: Test frequency is 5 minutes, the script opens 2 web pages, and the total duration is around 20 seconds. To support more workload, scale up as follows:</p> <p>Vertical scaling: Increase the requests and limits numbers of CPU and memory. Because JavaScript playback engine is CPU-intensive, you can increase the requests and limits numbers of CPU to support more API script tests. For example, if the requests and limits numbers of CPU are set to 800m and 1000m (0.8/1.0 Core), 40 API scripts can be supported with the previously described test configuration. Horizontal scaling: A simpler approach is provided to increase the replica number of different playback engines. For more information, see the Scalability section.  Troubleshooting To check the Helm chart version, run the following command:</p> <p>helm list -n  <p>You can get the version number from the result such as synthetic-pop-. <p>If you meet any issues, for example, the location that you specify can't be shown on Instana Synthetic UI, first check the PoP controller log by running the following command:</p> <p>kubectl logs -n  -f  <p>To change the trace level of each component, you can pass the traceLevel values as follows to make an upgrade on your PoP:</p> <p>--set controller.traceLevel=\"DEBUG\" --set http.traceLevel=\"DEBUG\" --set javascript.traceLevel=\"DEBUG\" --set browserscript.traceLevel=\"DEBUG\"</p> <p>You can also dynamically change the trace level of PoP controller without restarting the pod by running the set_trace_level.sh command in the container.</p>"},{"location":"instana_synthetic_monitoring/#enter-synthetic-pop-controller-container","title":"enter synthetic-pop-controller container","text":"<p>kubectl exec -it -n   -- bash"},{"location":"instana_synthetic_monitoring/#run-set_trace_levelsh-command-to-change-trace-level-to-debug","title":"run set_trace_level.sh command to change trace level to DEBUG","text":"<p>./set_trace_level.sh DEBUG</p> <p>A pdcollect.sh script is provided to collect and package log files of Synthetic PoP into a tar.gz file and send it to Instana support team for assistance. You can find the pdcollect.sh script in the Instana Helm charts directory or download it from the synthetic-pop-charts repository. Run the following command:</p>"},{"location":"instana_synthetic_monitoring/#collect-pop-logs-from-a-namespace","title":"collect PoP logs from a namespace","text":"<p>./pdcollect.sh -n"},{"location":"instana_synthetic_monitoring/#instana-agent-on-iks","title":"Instana Agent on IKS","text":"<p>\u624b\u9806 1. namespace\u3092\u4f5c\u6210\u3059\u308b    <pre><code>kubectl create namespace instana-\n</code></pre> 2. Instana\u306e\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u304b\u3089\u5404\u7a2e\u63a5\u7d9a\u60c5\u5831\u3092\u78ba\u8a8d\u3059\u308b    1. Agent Deploy &gt; Kubernetes &gt; Helm 3. Helm Install\u3067\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b    <pre><code>helm install instana-agent --namespace instana-agent \\\n --repo https://agents.instana.io/helm \\\n --set agent.key='&lt;your agent key - as described above&gt;' \\\n --set agent.endpointHost='&lt;your host agent endpoint - as described above&gt;' \\\n --set cluster.name='&lt;your-cluster-name&gt;' \\\n --set zone.name='&lt;your-cluster-name&gt;' \\\n instana-agent\n</code></pre></p>"},{"location":"prome-turbo/","title":"Prome turbo","text":""},{"location":"prome-turbo/#prometheusturbonomic","title":"Prometheus\u3068Turbonomic\u306e\u9023\u643a","text":""},{"location":"prome-turbo/#prometurbo","title":"Prometurbo\u3068\u306f","text":"<p>Get metrics from Prometheus for applications, and expose these applications and metrics in JSON format via REST API. The data ingestion framework probe ( i.e. DIF Probe) will access the REST API, convert the JSON output to Turbonomic DTO to be consumed by Turbonomic server. This enables Turbonomic to collect and analyze Prometheus metrics and make intelligent decisions about application scaling, placement and optimization.</p> <p></p> <p>To configure the Prometheus server and map query results into applications and metrics, you need to create the following custom resources in the Kubernetes cluster:</p> <p>PrometheusQueryMapping: allows users to define mappings between Turbonomic entities (such as ApplicationComponents, Services, or VirtualMachines) and Prometheus metrics exposed by different prometheus exporters. PrometheusServerConfig: specifies the address of the Prometheus server, as well as optional label selectors to filter out PrometheusQueryMapping resources applicable to that server. This allows users to configure multiple Prometheus servers and use different mappings for each server. Custom resource definitions for the above two resources must be installed first in the Kubernetes cluster. Get them here.</p> <p>Sample custom resource instances can be found here.</p> <p>Output of Prometurbo: Applications with their metrics The application metrics are served via REST API at endpoint /metrics. The output JSON format is defined at turbo-go-sdk: <pre><code>type Topology struct {\nVersion    string       `json:\"version\"`\nUpdatetime int64        `json:\"updateTime\"`\nScope      string       `json:\"scope\"`\nSource     string       `json:\"source\"`\nEntities   []*DIFEntity `json:\"topology\"`\n}\n</code></pre> <code>``go type DIFEntity struct {     UID                 string</code>json:\"uniqueId\"<code>Type                string</code>json:\"type\"<code>Name                string</code>json:\"name\"<code>HostedOn            *DIFHostedOn</code>json:\"hostedOn\"<code>MatchingIdentifiers *DIFMatchingIdentifiers</code>json:\"matchIdentifiers\"<code>PartOf              []*DIFPartOf</code>json:\"partOf\"<code>Metrics             map[string][]*DIFMetricVal</code>json:\"metrics\"`     partOfSet           set.Set     hostTypeSet         set.Set }</p> <p>Follow the deployment instructions at here to deploy Prometurbo and DIFProbe container in the same Pod.</p>"},{"location":"prometheus/","title":"Prometheus\u306e\u8a2d\u5b9a","text":"<p>Prometheus\u306f\u3001\u9ad8\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002Kubernetes\u30b3\u30f3\u30c6\u30ca\u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u305f\u3081\u306e\u30a2\u30a6\u30c8\u30aa\u30d6\u30dc\u30c3\u30af\u30b9\u306e\u76e3\u8996\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u89b3\u6e2c\u53ef\u80fd\u306a\u9818\u57df\u3067\u306f\u3001\u30e1\u30c8\u30ea\u30af\u30b9\u3068\u30a2\u30e9\u30fc\u30c8\u3092\u652f\u63f4\u3059\u308b\u305f\u3081\u3001\u5927\u304d\u306a\u4eba\u6c17\u3092\u96c6\u3081\u3066\u3044\u307e\u3059\u3002</p> <p>\u91cd\u8981\u306a\u30dd\u30a4\u30f3\u30c85\u3064</p> <ol> <li>\u30e1\u30c8\u30ea\u30c3\u30af\u306e\u53ce\u96c6\uff1a Prometheus\u3067\u306f\u3001Pull\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u3066\u3001HTTP\u3067\u30e1\u30c8\u30ea\u30af\u30b9\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002Prometheus\u304c\u30e1\u30c8\u30ea\u30af\u30b9\u3092\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3067\u304d\u306a\u3044\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306b\u306f\u3001Pushgateway\u3092\u4f7f\u3063\u3066Prometheus\u306b\u30e1\u30c8\u30ea\u30af\u30b9\u3092\u30d7\u30c3\u30b7\u30e5\u3059\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u77ed\u6642\u9593\u306ekubernetes\u30b8\u30e7\u30d6\u3084Cronjob\u304b\u3089\u30ab\u30b9\u30bf\u30e0\u30e1\u30c8\u30ea\u30af\u30b9\u3092\u53ce\u96c6\u3059\u308b\u3088\u3046\u306a\u4f8b\u3067\u3059\u3002</li> <li>\u30e1\u30c8\u30ea\u30af\u30b9\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 Prometheus\u3092\u4f7f\u3063\u3066\u76e3\u8996\u3057\u305f\u3044\u30b7\u30b9\u30c6\u30e0\u306f\u3001/metrics\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u30e1\u30c8\u30ea\u30af\u30b9\u3092\u516c\u958b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002Prometheus\u306f\u3001\u3053\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f7f\u7528\u3057\u3066\u3001\u5b9a\u671f\u7684\u306b\u30e1\u30c8\u30ea\u30af\u30b9\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002</li> <li>PromQL\uff1a Prometheus\u306b\u306fPromQL\u3068\u3044\u3046\u975e\u5e38\u306b\u67d4\u8edf\u306a\u30af\u30a8\u30ea\u8a00\u8a9e\u304c\u4ed8\u5c5e\u3057\u3066\u304a\u308a\u3001Prometheus\u306e\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u3067\u30e1\u30c8\u30ea\u30af\u30b9\u3092\u7167\u4f1a\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001PromQL\u30af\u30a8\u30ea\u306f\u3001Prometheus UI\u3068Grafana\u3067\u30e1\u30c8\u30ea\u30c3\u30af\u30b9\u3092\u53ef\u8996\u5316\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</li> <li>Prometheus Exporters\uff08\u30d7\u30ed\u30e1\u30c6\u30a6\u30b9\u30fb\u30a8\u30af\u30b9\u30dd\u30fc\u30bf\u30fc\uff09\uff1a Exporters \u306f\u3001\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30a2\u30d7\u30ea\u306e\u65e2\u5b58\u306e\u30e1\u30c8\u30ea\u30af\u30b9\u3092 Prometheus \u306e\u30e1\u30c8\u30ea\u30af\u30b9\u5f62\u5f0f\u306b\u5909\u63db\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u591a\u304f\u306e\u516c\u5f0f\u304a\u3088\u3073\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306ePrometheus\u30a8\u30af\u30b9\u30dd\u30fc\u30bf\u30fc\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\u4e00\u4f8b\u3068\u3057\u3066\u3001Prometheus\u30ce\u30fc\u30c9\u30a8\u30af\u30b9\u30dd\u30fc\u30bf\u30fc\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u3059\u3079\u3066\u306eLinux\u30b7\u30b9\u30c6\u30e0\u30ec\u30d9\u30eb\u306e\u30e1\u30c8\u30ea\u30af\u30b9\u3092Prometheus\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u516c\u958b\u3059\u308b\u3082\u306e\u3067\u3059\u3002</li> <li>TSDB\uff08\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\uff09\uff1a Prometheus\u306f\u3001\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u3092\u52b9\u7387\u7684\u306b\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306bTSDB\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u306f\u30ed\u30fc\u30ab\u30eb\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u5358\u4e00\u969c\u5bb3\u70b9\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u3001Prometheus\u306eTSDB\u306b\u30ea\u30e2\u30fc\u30c8\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u7d71\u5408\u3059\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002  </li> </ol> <p>kubernetes\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8</p> <ol> <li><code>kubernetes-apiservers</code>: API servers\u304b\u3089\u3059\u3079\u3066\u306e\u30e1\u30c8\u30ea\u30c3\u30af\u3092\u53d6\u5f97\u3059\u308b.</li> <li><code>kubernetes-nodes</code>: kubernetes Node\u306e\u30e1\u30c8\u30ea\u30c3\u30af\u3092\u53d6\u5f97\u3059\u308b</li> <li><code>kubernetes-pods</code>: All the pod metrics get discovered if the pod metadata is annotated with\u00a0<code>prometheus.io/scrape</code>\u00a0and\u00a0<code>prometheus.io/port</code>\u00a0annotations.</li> <li><code>kubernetes-cadvisor</code>: cAdvisor \u30e1\u30c8\u30ea\u30c3\u30af\u3092\u53d6\u5f97\u3059\u308b.</li> <li><code>kubernetes-service-endpoints</code>: All the Service endpoints are scrapped if the service metadata is annotated with prometheus.io/scrape and prometheus.io/port annotations. It can be used for black-box monitoring.</li> </ol> <p><code>prometheus.rules</code>\u00a0contains all the alert rules for sending alerts to the Alertmanager.</p>"},{"location":"prometheus/#on-kubernetes","title":"\u30c7\u30d7\u30ed\u30a4\u624b\u9806 on Kubernetes","text":"<p>OpenShift\u306f\u6a19\u6e96\u88c5\u5099\u3067\u3059\u304c\u3001Kubernetes\u306e\u5834\u5408\u306f\u5225\u9014\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <ol> <li>\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5165\u624b<ol> <li>https://github.com/coreos/kube-prometheus</li> <li>/manifest \u306e\u4e2d\u306eprometheus\u95a2\u9023\u306e\u3082\u306e\u3060\u3051\u4f7f\u3046</li> <li>\u5168\u90e8\u307e\u3068\u3081\u3066apply\u3059\u308b\u3068AlertManager\u3084Grafana\u3082\u5165\u308b\u304c\u3001IKS\u7121\u511f\u67a0\u3060\u3068\u30b9\u30da\u30c3\u30af\u304c\u8db3\u308a\u306a\u3044\u305f\u3081Prometheus\u3060\u3051\u306b\u3059\u308b</li> </ol> </li> <li>Namespace\u4f5c\u6210\u3002\u540d\u524d\u306fMonitoring\u306b\u3059\u308b\u3002    <pre><code>kubectl create namespace monitoring\n</code></pre></li> <li>ClusterRole, Configmap, Deployment\u3092\u4fee\u6b63\u3057\u3066apply\u3057\u3066\u3044\u304f     <pre><code>kubectl create -f config-map.yaml\nkubectl create -f clusterRole.yaml\nkubectl create  -f prometheus-deployment.yaml\n</code></pre></li> <li>Prometheus\u306e\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u306e\u3067NodePort\u3092\u4f5c\u308b\u3002</li> </ol> <pre><code>kubectl port-forward prometheus-deployment 8080:9090 -n monitoring\n</code></pre> <p>ClusterIP : NodePort\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u308b\u3002http://169.51.194.202:30000/graph</p>"},{"location":"robotshop-db-access/","title":"\u5404\u7a2eDB\u3078\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u308b","text":"<p>VSCode\u306e\u62e1\u5f35\u6a5f\u80fd\u3092\u5c0e\u5165\u3057\u3066\u3001\u30ed\u30fc\u30ab\u30eb\u3067\u52d5\u3044\u3066\u3044\u308b\u5404DB\u3078\u63a5\u7d9a\u3057\u3066\u3044\u304d\u307e\u3059\u3002RDB, NoSQL\uff08kvm/document\uff09\u306e3\u7a2e\u985e\u304c\u3069\u3046\u306a\u3063\u3066\u308b\u306e\u304b\u78ba\u8a8d\u3057\u3066\u3044\u304d\u307e\u3059\u3002</p> <ol> <li>MySQL  </li> <li>Redis  </li> <li>MongoDB  </li> </ol>"},{"location":"robotshop-db-access/#_1","title":"\u6e96\u5099","text":"<p>\u307e\u305a\u306f\u62e1\u5f35\u6a5f\u80fd\u3092\u5165\u308c\u307e\u3059\u3002\u8272\u3005\u306aDB\u306b\u63a5\u7d9a\u3067\u304d\u308b\u6709\u540d\u306a\u3084\u3064\u306f\u3001\u7121\u6599\u30d7\u30e9\u30f3\u3060\u30683\u3064\u307e\u3067\u3057\u304b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3067\u304d\u306a\u3044\u306e\u3067\u4f7f\u3063\u3066\u306a\u3044\u3067\u3059\u3002VSCode\u306e\u5de6\u30e1\u30cb\u30e5\u30fc\u304b\u3089Extension\u3092\u9078\u629e\u3057\u3066\u3001\u691c\u7d22\u30dc\u30c3\u30af\u30b9\u306b\"mysql\"\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u76ee\u7684\u306e\u30d6\u30c4\u306f\u4e00\u756a\u4e0a\u306b\u3042\u308b\u306e\u3067\u3001Install\u3092\u30af\u30ea\u30c3\u30af\u3002</p> <p>\u540c\u3058\u3088\u3046\u306b\u3001\"Redis\"\u3001\"mongoDB\"\u3067\u3082\u691c\u7d22\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"robotshop-flutter/","title":"Instana\u7528 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30a2\u30d7\u30ea\u958b\u767a","text":"<p>Robotshop\u304c\u30c0\u30b5\u3059\u304e\u308b\u306e\u3068\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u306e\u30b3\u30fc\u30c9\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u306e\u3067\u3001\u571f\u65e5\u3092\u4f7f\u3063\u3066Flutter\u3067\u958b\u767a\u3057\u3066\u3044\u304f\u3002\u4eca\u306e/web\u306e\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306fAngular1.6\u3067\u53bb\u5e74\u30b5\u30dd\u30fc\u30c8\u7d42\u308f\u3063\u3066\u308b\u3002</p> <p>AngularJS support has officially ended as of January 2022. InstanaAgent\u306e\u8a2d\u5b9a\u306f\u3053\u3053 Instana\u30bb\u30f3\u30b5\u30fc\uff08\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\uff1f\uff09\u306f\u3053\u3053</p> <p>\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306f\u3058\u3081\u3066\u3060\u304b\u3089\u697d\u3057\u307f\u3002ReactNative\u3068\u60a9\u3093\u3060\u3051\u3069\u3001\u5b66\u7fd2\u30b3\u30f3\u30c6\u30f3\u30c4\u591a\u3081\u3060\u3063\u305f\u306e\u3067Flutter\u306b\u3057\u307e\u3057\u305f\u3002Cordova\u306f\u5019\u88dc\u306b\u5165\u3089\u306a\u304b\u3063\u305f\u3002  </p>"},{"location":"robotshop-flutter/#_1","title":"\u753b\u9762\u4e00\u89a7","text":"<ul> <li>\u30ed\u30b0\u30a4\u30f3</li> <li>\u5546\u54c1\u30ea\u30b9\u30c8</li> <li>\u5546\u54c1\u8a73\u7d30</li> <li>\u8cb7\u3044\u7269\u304b\u3054</li> <li>\u30de\u30a4\u30da\u30fc\u30b8</li> <li>\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u8aac\u660e \u30d8\u30eb\u30d7</li> <li>\u652f\u6255\u3044</li> <li>\u914d\u9001</li> </ul>"},{"location":"robotshop-flutter/#api","title":"\u547c\u3073\u51fa\u3059API","text":"<ul> <li>POST /login</li> <li>POST /user</li> <li>POST /register</li> <li>GET /products/:search_text</li> <li>GET /products/:category</li> <li>GET /product/:sku</li> <li>POST /review?userid&amp;rate&amp;message</li> <li>GET /review:sku</li> <li>POST /payment/pay orderid</li> <li>GET /orders:userid</li> </ul>"},{"location":"robotshop/","title":"Robotshop\u3092\u7406\u89e3\u3059\u308b\u30ce\u30fc\u30c8","text":"<p>Robotshop\u306f\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u958b\u767a\u3055\u308c\u305f\u67b6\u7a7a\u306e\u30ed\u30dc\u30c3\u30c8\u5c02\u9580EC\u30b5\u30a4\u30c8\u3002 IBM\u304c\u8cb7\u53ce\u3059\u308b\u524d\u304b\u3089Instana\u793e\u304c\u4f5c\u3063\u3066\u3044\u308b\u3082\u306e\u3063\u307d\u3044\u3002Java/Go/Node.js/RabbitMQ/MongoDB/PostgreSQL\u306a\u3069\u8af8\u3005\u306e\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u3092\u4f7f\u3063\u3066\u308b\u3002\u30d5\u30ed\u30f3\u30c8\u306fAngular\u3002\u4e00\u3064\u4e00\u3064\u306e\u30b5\u30fc\u30d3\u30b9\u306f\u305f\u3044\u3057\u305f\u30b3\u30fc\u30c9\u91cf\u3067\u306f\u306a\u3044\u304c\u3001\u7121\u7406\u3084\u308a\u8907\u96d1\u306a\u4f5c\u308a\u306b\u3057\u3066Instana\u3067\u306e\u76e3\u8996\u30c7\u30e2\u6620\u3048\u3092\u3088\u304f\u3057\u3066\u3044\u308b\u5370\u8c61\u3092\u3046\u3051\u308b\u3002\u3068\u308a\u3042\u3048\u305a\u5404\u30b5\u30fc\u30d3\u30b9\u304c\u306a\u306b\u3092\u3057\u3066\u3044\u308b\u304b\u3092\u8aad\u307f\u89e3\u304d\u306a\u304c\u3089\u3001\u65e5\u672c\u8a9e\u5bfe\u5fdc+\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u3044\u304f\u3002</p>"},{"location":"robotshop/#_1","title":"\u3084\u308a\u305f\u3044\u3053\u3068","text":"<ul> <li>\u30d5\u30ed\u30f3\u30c8\u3092Flutter\u3067\u4f5c\u308a\u76f4\u3059\u3002iOS + WebApp</li> <li>express\u7cfb\u306e\u30b5\u30fc\u30d3\u30b9\u3067\u4f7f\u3063\u3066\u308bpino-logger\u304cdeprecated\u306b\u306a\u3063\u3066\u308b\u306e\u3067http-pino\u306b\u5909\u66f4\u3059\u308b</li> <li>build\u6642\u306enpm i \u3067\u30a8\u30e9\u30fc\u304c\u305f\u304f\u3055\u3093\u51fa\u3066\u308b</li> <li>Rating\u3092\u30ec\u30d3\u30e5\u30fc\u306b\u304b\u3048\u3001\u30b3\u30e1\u30f3\u30c8\u3001\u753b\u50cf\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b</li> <li>\u30e6\u30fc\u30b6\u30fc\u767b\u9332\u30fb\u8a8d\u8a3c\u3092\u5b9f\u88c5\u3059\u308b</li> <li>Web\u30a2\u30d7\u30ea\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u30fb\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3092\u8a66\u3059</li> </ul> <p>\u8272\u3005\u3084\u308a\u305f\u3044\u3053\u3068\u3042\u308b\u304c\u3001\u6b8b\u308a1\u30f6\u6708...\u5f62\u898b\u3068\u3057\u3066\u4f7f\u3063\u3066\u3082\u3089\u3048\u308b\u3088\u3046\u306b\u5fc5\u8981\u5341\u5206\u306a\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u3002\u3068\u3044\u3046\u304bAngular1.8\u3063\u3066\u3059\u3054\u3044\u53e4\u3044\u306a...\u5165\u793e\u3057\u305f\u3068\u304d\u306f\u3058\u3081\u3066\u89e6\u3063\u305fAngular\u3067\u3059\u30892\u7cfb\u3060\u3063\u305f\u305e\u3044...\u3002</p>"},{"location":"robotshop/#_2","title":"\u65e2\u5b58\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u7406\u89e3","text":"<p>Robotshop\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089 </p> <p>\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u7ba1\u7406\u30fb\u76e3\u8996\u3092\u4f53\u9a13\u3059\u308b\u3088\u3046\u306b\u4f5c\u3089\u308c\u305f\u3002\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u76ee\u6307\u3057\u3066\u4f5c\u3089\u308c\u305f\u3082\u306e\u3067\u306f\u306a\u3044\u304c\u3001\u52d5\u304b\u3059\u3053\u3068\u3067\u30b3\u30f3\u30bb\u30d7\u30c8\u306e\u7406\u89e3\u306b\u306f\u5f79\u7acb\u3064\u3068\u601d\u3046\u3002\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306f\u5168\u304f\u8003\u616e\u3057\u3066\u3044\u306a\u3044\u3001\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306f\u3064\u304e\u306f\u304e\u3060\u3089\u3051\u3002</p> <p>podman-compose up \u3067\u5b9f\u884c\u3002\u4f50\u5ddd\u306eM1\u74b0\u5883\u306fmysql\u304c\u7acb\u3061\u4e0a\u304c\u3089\u306a\u304b\u3063\u305f\u305f\u3081\u3001mysql\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u30928.0\u306b\u5909\u3048\u305f\u3002\u7d50\u679c\u3001JDBC\u306e\u66f4\u65b0\u3068\u304b\u304c\u5fc5\u8981\u305d\u3046\u3002Java\u7cfb\u306e\u30b5\u30fc\u30d3\u30b9\u304cUnhealty\u306b\u306a\u3063\u3066\u308b\u3002 (Shipping\u30b5\u30fc\u30d3\u30b9\u5225\u306b\u3044\u3089\u306a\u304f\u306d\uff1f)\u3068\u308a\u3042\u3048\u305amySQL\u3067\u4f55\u7ba1\u7406\u3057\u3066\u308b\u304b\u898b\u3066\u307f\u308b\u3002\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306b\u5fc5\u9808\u3060\u3063\u305f\u3089\u4fee\u6b63\u3059\u308b\u3002</p> <ul> <li>Node.js\uff08Express\uff09</li> <li>\u30ab\u30bf\u30ed\u30b0</li> <li>\u30ab\u30fc\u30c8</li> <li>\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c</li> <li>Java\uff08Spring\uff09</li> <li>\u914d\u9001\uff08\u56fd\u30b3\u30fc\u30c9\u3068\u90fd\u5e02\u540d\u53d6\u5f97\u3059\u308b\u3060\u3051...\uff09</li> <li>PHP(Apache)</li> <li>\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0</li> </ul>"},{"location":"robotshop/#m1","title":"M1\u74b0\u5883\u3067\u52d5\u304b\u3059","text":"<p>mySQL\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3057\u307e\u3046\u306e\u3067\u3001docker-compose.yaml\u3092\u4ee5\u4e0b\u306b\u5909\u3048\u308b\u3002 <pre><code>  mysql:\n    build:\n      context: mysql\n    image: ${REPO}/rs-mysql-db:${TAG}\n    platform: linux/amd64\n    cap_add:\n      - NET_ADMIN\n    networks:\n      - robot-shop\n    logging:\n      &lt;&lt;: *logging\n</code></pre> \u4f7f\u3046\u30a4\u30e1\u30fc\u30b8\u3092mysql/mysql-server:5.7\u306b\u5909\u3048\u308b\u3002\u3053\u308c\u306f/mysql/dockerfile\u306b\u8a18\u8f09\u3057\u3066\u3042\u308b\u7b87\u6240\u3092\u5909\u66f4\u3059\u308b\u3002</p> <p>\u307e\u305f\u3001Rabbitmq\u306e\u7ba1\u7406UI\u3084\u3001\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u304b\u3089mongodb\u3001mysql\u306b\u63a5\u7d9a\u3057\u305f\u3044\u306e\u3067ports\u3092\u8ffd\u52a0\u3059\u308b\u3002\u6700\u7d42\u7684\u306b\u66f4\u65b0\u3057\u305fdocker-compose.yaml\u306f\u4ee5\u4e0b\u306e\u901a\u308a</p> docker-compose.yaml<pre><code>version: '3'\nservices:\nmongodb:\nbuild:\ncontext: mongo\nimage: ${REPO}/rs-mongodb:${TAG}\nnetworks:\n- robot-shop\nports: #\u8ffd\u52a0\n- \"27018:27017\" #\u8ffd\u52a0\nlogging: &amp;logging\ndriver: \"json-file\"\noptions:\nmax-size: \"25m\"\nmax-file: \"2\"\nredis:\nimage: redis:6.2-alpine\nnetworks:\n- robot-shop\nports: #\u8ffd\u52a0\n- \"6379:6379\" #\u8ffd\u52a0\nlogging:\n&lt;&lt;: *logging\nrabbitmq:\nimage: rabbitmq:3.8-management-alpine\nnetworks:\n- robot-shop\nports: #\u8ffd\u52a0\n- 5672:5672 #\u8ffd\u52a0\n- 15672:15672 #\u8ffd\u52a0\nlogging:\n&lt;&lt;: *logging\ncatalogue:\nbuild:\ncontext: catalogue\nimage: ${REPO}/rs-catalogue:${TAG}\ndepends_on:\n- mongodb\nnetworks:\n- robot-shop\nhealthcheck:\ntest: [ \"CMD\", \"curl\", \"-H\", \"X-INSTANA-SYNTHETIC: 1\", \"-f\", \"http://localhost:8080/health\" ]\ninterval: 10s\ntimeout: 10s\nretries: 3\nlogging:\n&lt;&lt;: *logging\nuser:\nbuild:\ncontext: user\nimage: ${REPO}/rs-user:${TAG}\ndepends_on:\n- mongodb\n- redis\nnetworks:\n- robot-shop\nhealthcheck:\ntest: [ \"CMD\", \"curl\", \"-H\", \"X-INSTANA-SYNTHETIC: 1\", \"-f\", \"http://localhost:8080/health\" ]\ninterval: 10s\ntimeout: 10s\nretries: 3\nlogging:\n&lt;&lt;: *logging\ncart:\nbuild:\ncontext: cart\nimage: ${REPO}/rs-cart:${TAG}\ndepends_on:\n- redis\nnetworks:\n- robot-shop\nhealthcheck:\ntest: [ \"CMD\", \"curl\", \"-H\", \"X-INSTANA-SYNTHETIC: 1\", \"-f\", \"http://localhost:8080/health\" ]\ninterval: 10s\ntimeout: 10s\nretries: 3\nlogging:\n&lt;&lt;: *logging\nmysql:\nbuild:\ncontext: mysql\nimage: ${REPO}/rs-mysql-db:${TAG}\nplatform: linux/amd64 #\u8ffd\u52a0 M1\u306e\u5834\u5408\u3060\u3051\ncap_add:\n- NET_ADMIN\nports:\n\"3306:3306\"\nnetworks:\n- robot-shop\nlogging:\n&lt;&lt;: *logging\nshipping:\nbuild:\ncontext: shipping\nimage: ${REPO}/rs-shipping:${TAG}\ndepends_on:\n- mysql\nnetworks:\n- robot-shop\nhealthcheck:\ntest: [\"CMD\", \"curl\", \"-H\", \"X-INSTANA-SYNTHETIC: 1\", \"-f\", \"http://localhost:8080/health\"]\ninterval: 10s\ntimeout: 10s\nretries: 3\nlogging:\n&lt;&lt;: *logging\nratings:\nbuild:\ncontext: ratings\nimage: ${REPO}/rs-ratings:${TAG}\nenvironment:\nAPP_ENV: prod\nnetworks:\n- robot-shop\ndepends_on:\n- mysql\nhealthcheck:\ntest: [\"CMD\", \"curl\", \"-H\", \"X-INSTANA-SYNTHETIC: 1\", \"-f\", \"http://localhost/_health\"]\ninterval: 10s\ntimeout: 10s\nretries: 3\nlogging:\n&lt;&lt;: *logging\npayment:\nbuild:\ncontext: payment\nimage: ${REPO}/rs-payment:${TAG}\ndepends_on:\n- rabbitmq\nnetworks:\n- robot-shop\nhealthcheck:\ntest: [\"CMD\", \"curl\", \"-H\", \"X-INSTANA-SYNTHETIC: 1\", \"-f\", \"http://localhost:8080/health\"]\ninterval: 10s\ntimeout: 10s\nretries: 3\n# Uncomment to change payment gateway\n#environment:\n#PAYMENT_GATEWAY: \"https://www.worldpay.com\"\nlogging:\n&lt;&lt;: *logging\ndispatch:\nbuild:\ncontext: dispatch\nimage: ${REPO}/rs-dispatch:${TAG}\ndepends_on:\n- rabbitmq\nnetworks:\n- robot-shop\nlogging:\n&lt;&lt;: *logging\nweb:\nbuild:\ncontext: web\nargs:\n# agent key to download tracing libs\nKEY: ${INSTANA_AGENT_KEY}\nimage: ${REPO}/rs-web:${TAG}\ndepends_on:\n- catalogue\n- user\n- payment\nports:\n- \"8080:8080\"\nnetworks:\n- robot-shop\nhealthcheck:\ntest: [ \"CMD\", \"curl\", \"-H\", \"X-INSTANA-SYNTHETIC: 1\", \"-f\", \"http://localhost:8080/\" ]\ninterval: 10s\ntimeout: 10s\nretries: 3\n# Uncomment to enable Instana EUM\n# environment:\n# INSTANA_EUM_KEY: &lt;your eum key&gt;\n# INSTANA_EUM_REPORTING_URL: &lt;your reporting url&gt;\nlogging:\n&lt;&lt;: *logging\nnetworks:\nrobot-shop:\n</code></pre> <p>\u30ed\u30fc\u30ab\u30eb\u3067\u52d5\u304b\u3059\u3068\u304d\u306f\u4ee5\u4e0b\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3002/robot-shop\u3067\u3002 <pre><code>podman-compose up\n</code></pre></p> <p>\u5404\u7a2e\u30b5\u30fc\u30d3\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306f\u3053\u3093\u306a\u611f\u3058\u3002 - web\u753b\u9762: localhost:8080 - mySQL: localhost:3306 - RabbitMQ\u7ba1\u7406\u753b\u9762: localhost:15672 - mongoDB: localhost:27018</p> <p>DBeaver\u3068\u304bVSCode\u306e\u62e1\u5f35\u6a5f\u80fd\u3068\u304b\u3067\u5404\u7a2eDB\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u521d\u671f\u767b\u9332\u30c7\u30fc\u30bf\u3092\u898b\u305f\u308a\u3057\u305f\u3002</p> <p>\u3084\u308a\u65b9\u6c17\u306b\u306a\u308b\u65b9\u306f\u53c2\u8003\u60c5\u5831\u306b\u307e\u3068\u3081\u307e\u3057\u305f\u3002</p>"},{"location":"robotshop/#1-catalogue","title":"1. Catalogue\uff08\u5546\u54c1\u30ea\u30b9\u30c8\u7cfb\uff09","text":"<p>mongoDB\u304b\u3089\u53d6\u5f97\u3057\u305f\u5546\u54c1\u30ea\u30b9\u30c8\u3092\u8fd4\u3059API\u3068\u304b\u3002Node.js(Express)\u3002API\u7528\u610f\u3057\u3066\u3042\u308b\u306e\u306f4\u3064\u3002  </p> <ol> <li>/health          \u2192 \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af</li> <li>/products        \u2192 \u5168\u3066\u306e\u5546\u54c1</li> <li>/product:sku     \u2192 SKU\u5358\u4f4d</li> <li>/product::cat    \u2192 \u30ab\u30c6\u30b4\u30ea\u30fc\u6307\u5b9a\u306e\u5546\u54c1\u4e00\u89a7</li> <li>/categories      \u2192 \u30ab\u30c6\u30b4\u30ea\u30fc\u4e00\u89a7</li> <li>/search/:text    \u2192 \u30c6\u30ad\u30b9\u30c8\u691c\u7d22</li> </ol> <p>Instana\u3067Node.js\u3092\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u3068\u304d\u306f\u30a2\u30d7\u30ea\u5074\u306b\u30b3\u30ec\u30af\u30bf\u30fc\u3092\u8ffd\u52a0\u3057\u3066\u304a\u304f\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002 <pre><code>npm install --save @instana/collector\n</code></pre> \u3067\u30b3\u30ec\u30af\u30bf\u30fc\u3092\u8ffd\u52a0\u3057\u305f\u3042\u3068\u3067\u8aad\u307f\u8fbc\u307f\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3002 <pre><code>const instana = require('@instana/collector');\n// init tracing\n// MUST be done before loading anything else!\ninstana({\n    tracing: {\n        enabled: true\n    }\n});\n</code></pre> \u3053\u306e\u3078\u3093\u8aad\u307f\u89e3\u304f\u3002\u3051\u3063\u3053\u3046\u8272\u3005\u3067\u304d\u308b\u3053\u3068\u3042\u308b\u3051\u3069\u3001\u30b3\u30fc\u30c9\u306e\u4fee\u6b63\u304c\u5fc5\u8981\u3002</p> <p>Span\u306e\u4f5c\u6210\u3082\u3057\u3066\u308b\u3002</p> <pre><code>    let span = instana.currentSpan();\nspan.annotate('custom.sdk.tags.datacenter', dcs[Math.floor(Math.random() * dcs.length)]);\n</code></pre> <p>\u30ed\u30dc\u30c3\u30c8\u30b7\u30e7\u30c3\u30d7\u3060\u3068\u30ed\u30ae\u30f3\u30b0\u30c4\u30fc\u30eb\u3068\u3057\u3066pino\u3063\u3066\u3084\u3064\u3092\u3044\u308c\u3066\u308b\u3002express-pino-logger \u3053\u308c\u306fInstana\u306b\u30ed\u30b0\u9001\u3089\u308c\u308b\u306e...?\u305f\u3076\u3093Robotshop\u306e\u3053\u308d\u306f\u30ed\u30b0\u6a5f\u80fd\u304c\u5b9f\u88c5\u3055\u308c\u3066\u306a\u3044\u304b\u3089\u3084\u3063\u3066\u306a\u3044\u3068\u601d\u308f\u308c\u308b\u3002\u4eca\u306a\u3089\u3067\u304d\u305d\u3046\u3002</p> Node.js - Instana\u306eLogger\u8a2d\u5b9a \u521d\u671f\u5316\u5f8c\u306e\u30ed\u30ac\u30fc\u306e\u8a2d\u5b9a instana.setLogger(logger) \u3092\u4f7f\u7528\u3057\u3066\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e bunyan \u30ed\u30ac\u30fc\u306e\u4ee3\u308f\u308a\u306b\u30ab\u30b9\u30bf\u30e0\u30fb\u30ed\u30ac\u30fc\u3092 @instana/collector \u306b\u63d0\u4f9b\u3057\u307e\u3059\u3002  \u524d\u8ff0\u306e\u3088\u3046\u306b\u3001\u4ed6\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8981\u6c42/\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u524d\u306b\u3001\u521d\u671f\u5316\u95a2\u6570 ( require('@instana/collector')\u306b\u3088\u3063\u3066\u8fd4\u3055\u308c\u308b) \u3092\u5373\u6642\u306b\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3046\u3057\u306a\u3044\u3068\u3001Instana \u306e\u81ea\u52d5\u30c8\u30ec\u30fc\u30b9\u306f\u90e8\u5206\u7684\u306b\u3057\u304b\u6a5f\u80fd\u3057\u307e\u305b\u3093\u3002 \u7279\u306b\u3001\u30ed\u30ae\u30f3\u30b0\u30fb\u30d1\u30c3\u30b1\u30fc\u30b8 (\u4f8b\u3048\u3070\u3001bunyan\u3001pino\u3001\u307e\u305f\u306f winston) \u3092\u8981\u6c42\u3059\u308b\u524d\u306b\u3001Instana \u3092\u521d\u671f\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Instana \u3092\u521d\u671f\u5316\u3059\u308b\u524d\u306b\u30ed\u30ae\u30f3\u30b0\u30fb\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8981\u6c42\u3059\u308b\u3068\u3001Instana \u306b\u30ed\u30b0\u30fb\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u8868\u793a\u3055\u308c\u307e\u305b\u3093\u3002  \u4e00\u65b9\u3001\u72ec\u81ea\u306e\u30ed\u30ac\u30fc\u3092 Node.js \u30b3\u30ec\u30af\u30bf\u30fc\u306b\u6e21\u3057\u3066\u3001\u305d\u306e\u30ed\u30b0\u30fb\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u5f62\u5f0f\u304c\u6b8b\u308a\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30b0\u30fb\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u540c\u3058\u306b\u306a\u308a\u3001\u540c\u3058\u30ed\u30b0\u30fb\u30d5\u30a1\u30a4\u30eb/\u5b9b\u5148\u306b\u66f8\u304d\u8fbc\u307e\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u304c\u5fc5\u8981\u306a\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002 \u30ed\u30ac\u30fc\u3092\u30b3\u30ec\u30af\u30bf\u30fc\u306e\u521d\u671f\u5316\u95a2\u6570\u306b\u6e21\u3059\u5834\u5408\u306f\u3001Instana \u3092\u521d\u671f\u5316\u3059\u308b\u524d\u306b\u305d\u306e\u30ed\u30ae\u30f3\u30b0\u30fb\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8981\u6c42\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u306e\u5faa\u74b0\u4f9d\u5b58\u95a2\u4fc2\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u3001@instana/collector \u306f\u3001\u6700\u521d\u306b\u30ab\u30b9\u30bf\u30e0\u30fb\u30ed\u30ac\u30fc\u306a\u3057\u3067 Instana \u3092\u521d\u671f\u5316\u3057\u3066\u304b\u3089\u3001\u5f8c\u3067\u30ed\u30ac\u30fc\u3092\u8a2d\u5b9a\u3059\u308b\u305f\u3081\u306e\u95a2\u6570 setLogger \u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002  \u5177\u4f53\u7684\u306a\u4f8b\u3092\u793a\u3059\u305f\u3081\u306b\u3001\u4ee5\u4e0b\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002  // WRONG const instana = require('@instana/collector');  // The bunyan package will not be instrumented by Instana, because it is // required *before* Instana has been initialized. const bunyan = require('bunyan'); const logger = bunyan.createLogger(...);  // Now Instana is initialized, after the logging package has already been // required. This is too late! const instana = instana(); // TOO LATE! instana.setLogger(logger);  \u4ee3\u308f\u308a\u306b\u3001\u6700\u521d\u306b\u30ed\u30ac\u30fc\u306a\u3057\u3067 Instana \u3092\u521d\u671f\u5316\u3057\u3066\u304b\u3089\u3001\u4ed6\u306e\u3082\u306e\u3092\u8981\u6c42\u3057\u307e\u3059\u3002 \u6b21\u306b\u3001\u5f8c\u3067\u30ed\u30ac\u30fc\u304c\u5fc5\u8981\u306b\u306a\u308a\u3001\u521d\u671f\u5316\u3055\u308c\u305f\u3068\u304d\u306b\u3001Instana \u304c\u4f7f\u7528\u3059\u308b\u30ed\u30ac\u30fc\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002  // Correct: Call the initialization function immediately. // (Pay attention to the extra pair of parantheses at the end of the line.) const instana = require('@instana/collector')();  // Require and initialize your logging package. const bunyan = require('bunyan'); // Create your logger(s). const logger = bunyan.createLogger(...); // Set the logger Instana should use. instana.setLogger(logger);  Instana \u304b\u3089\u306e\u30ed\u30b0\u51fa\u529b\u306e\u6700\u521d\u306e\u6570\u884c (\u521d\u671f\u5316\u624b\u9806\u4e2d) \u306f Instana \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e bunyan \u30ed\u30ac\u30fc\u3067\u30ed\u30b0\u306b\u8a18\u9332\u3055\u308c\u307e\u3059\u304c\u3001instana.setLogger(logger) \u547c\u3073\u51fa\u3057\u5f8c\u306e\u3059\u3079\u3066\u306e\u3082\u306e\u306f\u3001\u8a2d\u5b9a\u3055\u308c\u305f\u30ed\u30ac\u30fc\u3067\u30ed\u30b0\u306b\u8a18\u9332\u3055\u308c\u307e\u3059\u3002 \u3055\u3089\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30b0\u51fa\u529b\u304c Instana \u306e\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u306e\u300c\u30ed\u30b0\u30fb\u30e1\u30c3\u30bb\u30fc\u30b8\u300d\u30bf\u30d6\u306b\u6b63\u3057\u304f\u8868\u793a\u3055\u308c\u307e\u3059 (\u8868\u793a\u3055\u308c\u308b\u30ed\u30b0\u547c\u3073\u51fa\u3057\u306f\u3001\u91cd\u5927\u5ea6\u304c\u300cWARN\u300d\u4ee5\u4e0a\u306e\u3082\u306e\u306e\u307f\u3067\u3059)\u3002  Bunyan \u307e\u305f\u306f Pino \u30ed\u30ac\u30fc\u3092 setLogger \u306b\u6e21\u3059\u3068\u3001Node.js \u30b3\u30ec\u30af\u30bf\u30fc\u306f\u3001\u540c\u3058\u30ed\u30b0\u30fb\u30ec\u30d9\u30eb\u3068\u30bf\u30fc\u30b2\u30c3\u30c8\u30fb\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f7f\u7528\u3057\u3066\u6240\u5b9a\u306e\u30ed\u30ac\u30fc\u306e\u5b50\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u4ed6\u306e\u30ed\u30ae\u30f3\u30b0\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u3082\u3001\u30ed\u30b0\u30fb\u30ec\u30d9\u30eb debug\u3001info\u3001warn\u3001\u304a\u3088\u3073 error \u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b\u9650\u308a\u3001\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u5834\u5408 Node.js \u30b3\u30ec\u30af\u30bf\u30fc\u306f\u5b50\u30ed\u30ac\u30fc\u3092\u4f5c\u6210\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u6307\u5b9a\u306e\u30ed\u30ac\u30fc\u3092\u305d\u306e\u307e\u307e\u4f7f\u7528\u3057\u307e\u3059\u3002  @instana/collector \u306b\u63d0\u4f9b\u3059\u308b\u30ed\u30ac\u30fc\u3067\u5fc5\u8981\u306a\u30ed\u30b0\u30fb\u30ec\u30d9\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\u306e\u306f\u304a\u5ba2\u69d8\u306e\u8cac\u4efb\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 @instana/collector \u304b\u3089\u4e88\u671f\u3057\u306a\u3044\u30c7\u30d0\u30c3\u30b0\u30fb\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u308b\u5834\u5408\u3001\u30ec\u30d9\u30eb\u304c info \u307e\u305f\u306f warn \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30ed\u30ac\u30fc\u3092\u5fc5\u305a\u6e21\u3057\u3066\u304f\u3060\u3055\u3044\u3002"},{"location":"robotshop/#mongodb","title":"MongoDB\uff08\u5546\u54c1\u30ea\u30b9\u30c8\u30fb\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff09","text":"<p>Node.js\u304c\u3084\u308a\u53d6\u308a\u3057\u3066\u308b\u3002Mongo\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f5\u3002 <code>COPY *.js /docker-entrypoint-initdb.d/</code>\u3067\u8d77\u52d5\u6642\u306b2\u3064\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u6d41\u3059\u3088\u3046\u306b\u306a\u3063\u3066\u308b\u3002 1. catalogue.js    \u5546\u54c1\u30ea\u30b9\u30c8\u3002products: {sku: 'Watson', name: 'Watson', description: 'Probably the smartest AI on the planet', price: 2001, instock: 2, categories: ['Artificial Intelligence']} 2. users.js    \u767b\u9332\u6e08\u307f\u30e6\u30fc\u30b6\u30fc\u30ea\u30b9\u30c8\u3002users: {name: 'user', password: 'password', email: 'user@me.com'},</p> <p>\u3061\u306a\u307f\u306b\u4eca\u56de\u306f\u8a8d\u8a3c\u3092\u5fc5\u8981\u3068\u3057\u3066\u3044\u306a\u3044mongo\u306e\u305f\u3081\u3001Instana\u30bb\u30f3\u30b5\u30fc\u304c\u81ea\u52d5\u3067\u69cb\u6210\u3055\u308c\u3066\u308b\u3063\u307d\u3044\u3002</p> <p>\u30a2\u30af\u30b7\u30e7\u30f3\u306f\u4e0d\u8981\u3067\u3059\u3002 \u8a8d\u8a3c\u304c\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u308b MongoDB \u306e\u30e2\u30cb\u30bf\u30fc\u306f\u3001 configuration.yaml \u30d5\u30a1\u30a4\u30eb\u306b\u69cb\u6210\u3092\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082\u81ea\u52d5\u7684\u306b\u884c\u308f\u308c\u307e\u3059\u3002</p> \u8a8d\u8a3c\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u308bmongoDB\u306e\u76e3\u8996 MongoDB\u3092\u30e2\u30cb\u30bf\u30fc\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u6700\u5c0f\u9650\u306e\u5f79\u5272\u3092\u6301\u3064\u30e6\u30fc\u30b6\u30fc\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002  read - admin \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u4e0a clusterMonitoer - admin \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u4e0a read - local \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u4e0a mongo \u30b7\u30a7\u30eb\u3067\u3001 admin \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u306b Instana \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002  admin \u30e6\u30fc\u30b6\u30fc\u3068\u3057\u3066\u8a8d\u8a3c\u3057\u307e\u3059\u3002 <pre><code>use admin\ndb.auth(\"admin\", \"YOUR_MONGODB_ADMIN_PASSWORD\")\n</code></pre> MongoDB 3.x \u4ee5\u964d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u5834\u5408\u306f\u3001 createUser \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 <pre><code>db.createUser({\n  \"user\":\"stan\",\n  \"pwd\": \"UNIQUEPASSWORD\",\n  \"roles\" : [\n    {role: 'read', db: 'admin' },\n    {role: 'clusterMonitor', db: 'admin'},\n    {role: 'read', db: 'local' }\n  ]\n})\n</code></pre> !!! alert         MongoDB Atlas \u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u30e6\u30fc\u30b6\u30fc (\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u3059\u3079\u3066\u306e\u5f79\u5272\u3092\u6301\u3064) \u306f\u3001MongoDB Atlas \u7ba1\u7406\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u4ecb\u3057\u3066\u306e\u307f\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002          \u30e6\u30fc\u30b6\u30fc\u304c\u4f5c\u6210\u3055\u308c\u305f\u5f8c\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u69cb\u6210\u30d5\u30a1\u30a4\u30eb\u3067\u305d\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u69cb\u6210\u3067\u304d\u307e\u3059\u3002         <pre><code>com.instana.plugin.mongodb:\nuser: 'stan'\nsource: 'admin'\npassword: 'UNIQUEPASSWORD'\n</code></pre>         source\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u307e\u305f\u306f\u8a8d\u8a3c\u30bd\u30fc\u30b9\u3092\u53c2\u7167\u3057\u307e\u3059\u3002 \u8a73\u3057\u304f\u306f\u3001MongoDB \u8cc7\u6599\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002"},{"location":"robotshop/#redis","title":"Redis","text":"<p>redis:6.2\u3067\u3059\u3002Instana\u306eUI\u4e0a\u3067dependencies\u3092\u78ba\u8a8d\u3059\u308b\u3068\u3001\u30ab\u30fc\u30c8\u3068\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u4f7f\u308f\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002 </p> <p>Info<p>Redis\u306fInMemoryDB\u3067\u3059\u3002\u65e9\u3044\u3084\u3064\u3002\u7121\u6599\u3001\u65e9\u3044\u3001NoSql\u3001\u30e1\u30e2\u30ea\u4e0a\u3067\u52d5\u304f\u3001KVS\u3002\u3053\u306e\u304f\u3089\u3044\u306f\u77e5\u3063\u3066\u308b\u3002docker-compose up\u3067redis\u3092\u7acb\u3061\u4e0a\u3052\u3001\u30ab\u30fc\u30c8\u3068\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u63a5\u7d9a\u3057\u3066\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002OpenShift\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u304d\u306f\u3001redis --- StatefulSet\u3067\u4f7f\u3063\u3066\u308b\u3002</p> </p> <p>user/server.js\u5185\u3067redis\u64cd\u4f5c\u3092\u3057\u3066\u308b\u3068\u3053\u308d\u3092\u898b\u3066\u307f\u307e\u3059\u3002 <pre><code>// node.js\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305fredis\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089redis\u3078\u63a5\u7d9a\u3059\u308b\nvar redisClient = redis.createClient({\nhost: process.env.REDIS_HOST || 'redis'\n});\nredisClient.on('error', (e) =&gt; {\nlogger.error('Redis ERROR', e);\n});\nredisClient.on('ready', (r) =&gt; {\nlogger.info('Redis READY', r);\n});\n//\u7701\u7565\n// use REDIS INCR to track anonymous users\n// robotshop\u306f\u30ed\u30b0\u30a4\u30f3\u3057\u306a\u3044\u3067\u4f7f\u3048\u308b\u306e\u3067\u3001\u30e9\u30f3\u30c0\u30e0\u306bredis\u3067ID\u3092\u63a1\u756a\u3057\u3001Instana\u3067\u306e\u3067\u3082\u3092\u3057\u3084\u3059\u304f\u3057\u3066\u3044\u308b\u6c17\u304c\u3059\u308b\n\u540c\u3058\u3088\u3046\u306b\u3001cart/server.js\u3082\u898b\u3066\u307f\u308b\u3002\n```js\nfunction saveCart(id, cart) {\n    logger.info('saving cart', cart);\n    return new Promise((resolve, reject) =&gt; {\n        redisClient.setex(id, 3600, JSON.stringify(cart), (err, data) =&gt; {\n            if(err) {\n                reject(err);\n            } else {\n                resolve(data);\n            }\n        });\n    });\n}\n</code></pre></p> <p>\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u308b\u72b6\u614b\u3067\u30ab\u30fc\u30c8\u306b\u5546\u54c1\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3001redis\u306b\u60c5\u5831\u304c\u767b\u9332\u3055\u308c\u308b\u3002\u30b3\u30fc\u30c9\u3068\u3057\u3066\u306fredisClient.setex\u306f3\u3064\u306e\u5f15\u6570\u3092\u6e21\u3057\u3066\u3044\u3066\u3001\u305d\u308c\u305e\u308c\u304c\u767b\u9332\u3059\u308bKey\u3001ttl\u3001\u30c7\u30fc\u30bf\u3067\u3059\u3002Key\u306f\u30e6\u30fc\u30b6\u30fcID\u3067\u3001\u30ab\u30fc\u30c8\u306e\u60c5\u5831\u306f1\u6642\u9593\u3060\u3051\u4fdd\u5b58\u3055\u308c\u308b\u8a2d\u5b9a\u306b\u306a\u3063\u3066\u307e\u3059\u306d\u3002</p> <p>\u5b9f\u969b\u306b\u898b\u3066\u307f\u305f\u3089\u3053\u3093\u306a\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u307e\u3057\u305f\u3002\uff08\u8a66\u3057\u305f\u3068\u304d\u306e\u30e6\u30fc\u30b6\u30fcID\u306fsagawa\uff09</p> <p>Redis &gt; db0 &gt; sagawa <pre><code>{\"total\":1066,\"tax\":177.66666666666663,\"items\":[{\"qty\":1,\"sku\":\"EMM\",\"name\":\"Exceptional Medical Machine\",\"price\":1024,\"subtotal\":1024},{\"qty\":1,\"sku\":\"RMC\",\"name\":\"Robotic Mining Cyborg\",\"price\":42,\"subtotal\":42}]}\n</code></pre></p> <p>app.get('/uniqueid', (req, res) =&gt; {     // get number from Redis     redisClient.incr('anonymous-counter', (err, r) =&gt; {         if(!err) {             res.json({                 uuid: 'anonymous-' + r             });         } else {             req.log.error('ERROR', err);             res.status(500).send(err);         }     }); });</p> <p><pre><code>\u3053\u306e\u6d41\u308c\u3067\u3001\u6b21\u306fUser\u3092\u898b\u3066\u3044\u304f\u3002Node.js(express)\u3060\u304b\u3089\u308f\u304b\u308a\u3084\u3059\u3044\u306f\u305a\u3002\n\n## \u30e6\u30fc\u30b6\u30fc\uff08\u8a8d\u8a3c\u7cfb\uff09\n\u5b9f\u969b\u306e\u8a8d\u8a3c\u6a5f\u80fd\u306f\u5b9f\u88c5\u3055\u308c\u3066\u306a\u3044\u3002\u4eca\u307e\u3067\u898b\u3066\u304d\u305f\u4f8b\u3068\u540c\u3058\u3088\u3046\u306b\u3001Node.js\u7528\u306einstana/collector\u3092require\u3067\u8aad\u307f\u8fbc\u3093\u3060\u5f8c\u3001tracing\u3092\u6709\u52b9\u5316\u3059\u308b\u30b3\u30fc\u30c9\u304b\u3089\u59cb\u307e\u308b\u3002\u30e6\u30fc\u30b6\u30fc\u306fmongodb\u3068redis\u3068\u901a\u4fe1\u3059\u308b\u305f\u3081\u3001\u3053\u306e2\u3064\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3082\u8aad\u307f\u8fbc\u3093\u3067\u308b\u3002\u30ed\u30ae\u30f3\u30b0\u306fpino\u3002\n\n\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u63d0\u4f9b\u3059\u308bAPI\u306f\u4ee5\u4e0b\n1. /health\n1. /uniqueid \u2192 \u30a2\u30ce\u30cb\u30de\u30b9\u7528\u306bID\u63a1\u756a\n2. /check/:id \u2192 \u30e6\u30fc\u30b6\u30fc\u304c\u5b58\u5728\u3059\u308b\u304b\u30c1\u30a7\u30c3\u30af\n3. /users \u2192 \u3059\u3079\u3066\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u8fd4\u5374\u3002\u30c7\u30d0\u30c3\u30b0\u7528\n4. /login[post] \u2192 \u8a8d\u8a3c\u3002\u540d\u524d\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5e73\u6587\u3067\u78ba\u8a8d\n5. /register[post] \u2192 \u30e6\u30fc\u30b6\u30fc\u767b\u9332\n6. /order/:id \u2192 \u767b\u9332\u6e08\u307f\u30e6\u30fc\u30b6\u30fc\u306e\u5834\u5408\u3001\u30aa\u30fc\u30c0\u30fc\u60c5\u5831\u3092\u8fd4\u3059\n7. /history/:id \u2192 \u767b\u9332\u6e08\u307f\u30e6\u30fc\u30b6\u30fc\u306e\u5834\u5408\u3001\u904e\u53bb\u5c65\u6b74\u3092\u8fd4\u3059\n\n&lt;details&gt;\n&lt;summary&gt;\u53c2\u8003\u3002history/:id\u306e\u30ec\u30b9\u30dd\u30f3\u30b9&lt;/summary&gt;\n</code></pre> {     \"_id\": \"64ea1532d6769c6ade71bbd7\",     \"name\": \"sagawa\",     \"history\": [         {             \"orderid\": \"093de19a-49b7-4aa3-9d7b-fb55649ca309\",             \"cart\": {                 \"total\": 477.7,                 \"tax\": 79.61666666666667,                 \"items\": [                     {                         \"qty\": 1,                         \"sku\": \"STAN-1\",                         \"name\": \"Stan\",                         \"price\": 67,                         \"subtotal\": 67                     },                     {                         \"qty\": 1,                         \"sku\": \"SHIP\",                         \"name\": \"shipping to Japan Tokyo\",                         \"price\": 410.7,                         \"subtotal\": 410.7                     }                 ]             }         },         {             \"orderid\": \"b8ac7c9e-ff4c-4bb8-bf16-1882552148f6\",             \"cart\": {                 \"total\": 544.7,                 \"tax\": 90.7833333333333,                 \"items\": [                     {                         \"qty\": 2,                         \"sku\": \"STAN-1\",                         \"name\": \"Stan\",                         \"price\": 67,                         \"subtotal\": 134                     },                     {                         \"qty\": 1,                         \"sku\": \"SHIP\",                         \"name\": \"shipping to Japan Tokyo\",                         \"price\": 410.7,                         \"subtotal\": 410.7                     }                 ]             }         }     ] } <pre><code>&lt;/details&gt;\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc/\u30d1\u30b9\u30ef\u30fc\u30c9\u304c3\u3064\u3002(MongoDB\u8d77\u52d5\u6642\u306b\u767b\u9332\u3055\u308c\u308b)\n</code></pre>     {name: 'user', password: 'password', email: 'user@me.com'},     {name: 'stan', password: 'bigbrain', email: 'stan@instana.com'},     {name: 'partner-57', password: 'worktogether', email: 'howdy@partner.com'} <pre><code>## \u30da\u30a4\u30e1\u30f3\u30c8\n\u652f\u6255\u3044\u91d1\u984d\u306e\u8a08\u7b97\u3068\u3001\u67b6\u7a7a\u306e\u652f\u6255\u3044\u51e6\u7406\u3092\u53d7\u3051\u4ed8\u3051\u3066rabbitMQ\u306b\u308f\u305f\u3057\u3066\u3044\u308b\u3002python\uff08Flask\uff09\u3067\u5b9f\u88c5\u3002\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u5185\u3067\u4f7f\u3063\u3066\u3044\u308bpython\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u4ee5\u4e0b\u3002\n- instana\n- usagi\n- Flask\n- requests\n- pika\n- prometheus_client\n- opentracing\n\nFlask\u306f\u4f7f\u3063\u305f\u3053\u3068\u3042\u308b\u30e1\u30f3\u30d0\u30fc\u591a\u305d\u3046\u3002python\u306e\u5834\u5408\u3082\u3001Instana\u306f\u624b\u52d5\u3067\u30b3\u30ec\u30af\u30bf\u30fc\u3092\u3044\u308c\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u304b\u3068\u601d\u3044\u304d\u3084\u3001Kubernetes\u306bAutoTrace WebHook\u3068\u3044\u3046\u3068\u3044\u3046\u3082\u306e\u3092\u5165\u308c\u305f\u3089\u81ea\u52d5\u3067\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u304f\u308c\u308b\u3089\u3057\u3044\u3002\n\n[python\u306e\u30e2\u30cb\u30bf\u30fc](https://www.ibm.com/docs/ja/instana-observability/current?topic=technologies-monitoring-python-instana-python-package)\n&gt; Instana \u306f\u3001 Python \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092 Instana AutoTrace\u2122\u306b\u3088\u3063\u3066\u81ea\u52d5\u7684\u306b\u30a4\u30f3\u30b9\u30c4\u30eb\u30e1\u30f3\u30c8\u3057\u307e\u3059\u3002 \u305f\u3060\u3057\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u624b\u52d5\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e \u624b\u52d5\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n&gt; Instana AutoTrace WebHook \u306f\u3001 Kubernetes \u30af\u30e9\u30b9\u30bf\u30fc\u5168\u4f53\u306b\u308f\u305f\u3063\u3066\u3001Instana \u3092\u4f7f\u7528\u3057\u3066 Python \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30e2\u30cb\u30bf\u30fc\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u3059\u3079\u3066\u306e\u3082\u306e\u3092\u81ea\u52d5\u7684\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b Kubernetes Mutable WebHook Admission Controller \u306e\u5b9f\u88c5\u3067\u3059\u3002Instana AutoTrace WebHook \u3092 Kubernetes \u30af\u30e9\u30b9\u30bf\u30fc\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5834\u5408\u306f\u3001\u305d\u308c\u3089\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u3067\u5b9f\u884c\u3055\u308c\u308b Python \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30c8\u30ec\u30fc\u30b9\u3059\u308b\u305f\u3081\u306e\u624b\u52d5\u30b9\u30c6\u30c3\u30d7\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n&gt; Python \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304a\u3088\u3073 Instana \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c Kubernetes\u306b\u3088\u3063\u3066\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001 Kubernetes \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30fb\u30a2\u30af\u30bb\u30b9 \u306e\u8cc7\u6599\u3067\u3001\u3053\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306b\u5fc5\u8981\u306a\u69cb\u6210\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n&gt; \u6ce8: Instana AutoTrace WebHook \u306f\u3001 Python \u30bb\u30f3\u30b5\u30fc 2.0.0 \u4ee5\u964d\u306e\u307f\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001 Python 2.7\u306a\u3069\u306e\u30ec\u30ac\u30b7\u30fc\u30fb\u30e9\u30f3\u30bf\u30a4\u30e0\u306e\u30b5\u30dd\u30fc\u30c8\u306f\u63d0\u4f9b\u3057\u307e\u305b\u3093\u3002 \u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u95a2\u9023\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\u3059\u308b\u306b\u306f\u3001 \u300c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u300d&amp;\u300c\u30d0\u30fc\u30b8\u30e7\u30f3\u300d\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30ec\u30ac\u30b7\u30fc\u30fb\u30e9\u30f3\u30bf\u30a4\u30e0\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u300c \u624b\u52d5\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u300d\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3068\u30e1\u30c8\u30ea\u30af\u30b9(\u3069\u3061\u3089\u3082GET\uff09\u3068\u3001\u652f\u6255\u3044\u306ePOST API\u3002/pay/&lt;id&gt;\u306f\u5c11\u3057\u51e6\u7406\u304c\u591a\u3044\u304c\u3001\u3060\u3044\u305f\u3044\u4ee5\u4e0b\u306e\u6d41\u308c\u3002  \n1. \u53d7\u3051\u53d6\u3063\u305f\u30ab\u30fc\u30c8ID\u306b\u57fa\u3065\u3044\u3066\u30ab\u30fc\u30c8\u306e\u5185\u5bb9\u3092\u30ed\u30b0\u306b\u51fa\u529b\n1. \u30e6\u30fc\u30b6\u30fc\u304c\u5b9f\u969b\u306b\u5b58\u5728\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u533f\u540d\u3068\u3057\u3066\u6271\u3046\n1. \u30ab\u30fc\u30c8\u304c\u6709\u52b9\u306a\u3082\u306e\u304b\u30c1\u30a7\u30c3\u30af\u3002\u4f8b\u3048\u3070\u3001\u30c8\u30fc\u30bf\u30eb\u304c0\u3084\u914d\u9001\u30a2\u30a4\u30c6\u30e0\u304c\u30ab\u30fc\u30c8\u5185\u306b\u306a\u3044\u5834\u5408\u306f\u7121\u52b9\n1. \u30c0\u30df\u30fc\u306e\u652f\u6255\u3044\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u5b9f\u884c\n1. \u8cfc\u5165\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0\u306e\u30e1\u30c8\u30ea\u30af\u30b9\u3092\u66f4\u65b0\n1. \u30e6\u30cb\u30fc\u30af\u306a\u6ce8\u6587ID\u3092\u751f\u6210\u3057\u3001RabbitMQ\u306e\u30ad\u30e5\u30fc\u306b\u6ce8\u6587\u3092\u8ffd\u52a0\n2. \u533f\u540d\u30e6\u30fc\u30b6\u30fc\u3067\u306f\u306a\u3044\u5834\u5408\u3001\u6ce8\u6587\u5c65\u6b74\u3068\u3057\u3066\u30ab\u30fc\u30c8\u60c5\u5831\u3092body\u3068\u3057\u3066\u30e6\u30fc\u30b6\u30fcAPI\u3092\u30b3\u30fc\u30eb(users/order/{id})\n3. \u30ab\u30fc\u30c8\u3092\u524a\u9664(\u30ab\u30fc\u30c8\u30b5\u30fc\u30d3\u30b9\u306b\u30b3\u30fc\u30eb: http://{cart}:8080/cart/{id})\n4. \u6ce8\u6587ID\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u5374\n\n\u30ad\u30e5\u30fc\u306b\u306f\u30aa\u30fc\u30c0\u30fcID\u3068\u30e6\u30fc\u30b6\u30fcID\u3001\u30ab\u30fc\u30c8\u306e\u60c5\u5831\u3092\u767b\u9332\u3057\u3066\u3044\u308b\u3002\u767b\u9332\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u30d5\u30a1\u30a4\u30eb\u304c\u5225\u308c\u3066\u3044\u3066\u3001\u540c\u3058\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306erabbitmq.py\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u308b\u3002\n\n```python\nimport json\nimport pika\nimport os\n\nclass Publisher:\n    # \u74b0\u5883\u5909\u6570\u3084\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u7528\u3044\u3066RabbitMQ\u306e\u8a2d\u5b9a\u3092\u5b9a\u7fa9\n    HOST = os.getenv('AMQP_HOST', 'rabbitmq')\n    VIRTUAL_HOST = '/'\n    EXCHANGE='robot-shop'\n    TYPE='direct'\n    ROUTING_KEY = 'orders'\n\n    def __init__(self, logger):\n        # \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067pika\u306e\u63a5\u7d9a\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u30ed\u30b0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u521d\u671f\u5316\n        self._logger = logger\n        self._params = pika.connection.ConnectionParameters(\n            host=self.HOST,\n            virtual_host=self.VIRTUAL_HOST,\n            credentials=pika.credentials.PlainCredentials('guest', 'guest'))\n        self._conn = None\n        self._channel = None\n\n    def _connect(self):\n        # \u63a5\u7d9a\u304c\u5fc5\u8981\u306a\u5834\u5408\u3001\u307e\u305f\u306f\u65e2\u5b58\u306e\u63a5\u7d9a/\u30c1\u30e3\u30cd\u30eb\u304c\u9589\u3058\u3066\u3044\u308b\u5834\u5408\u306bRabbitMQ\u306b\u63a5\u7d9a\n        if not self._conn or self._conn.is_closed or self._channel is None or self._channel.is_closed:\n            self._conn = pika.BlockingConnection(self._params)\n            self._channel = self._conn.channel()\n            self._channel.exchange_declare(exchange=self.EXCHANGE, exchange_type=self.TYPE, durable=True)\n            self._logger.info('connected to broker')\n\n    def _publish(self, msg, headers):\n        # \u6307\u5b9a\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u30d8\u30c3\u30c0\u30fc\u3092\u4f7f\u3063\u3066RabbitMQ\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\n        self._channel.basic_publish(exchange=self.EXCHANGE,\n                                    routing_key=self.ROUTING_KEY,\n                                    properties=pika.BasicProperties(headers=headers),\n                                    body=json.dumps(msg).encode())\n        self._logger.info('message sent')\n\n    # \u5fc5\u8981\u306b\u5fdc\u3058\u3066\u518d\u63a5\u7d9a\u3057\u306a\u304c\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\n    def publish(self, msg, headers):\n        if self._channel is None or self._channel.is_closed or self._conn is None or self._conn.is_closed:\n            self._connect()\n        try:\n            self._publish(msg, headers)\n        except (pika.exceptions.ConnectionClosed, pika.exceptions.StreamLostError):\n            self._logger.info('reconnecting to queue')\n            self._connect()\n            self._publish(msg, headers)\n\n    def close(self):\n        # RabbitMQ\u3068\u306e\u63a5\u7d9a\u3092\u9589\u3058\u308b\n        if self._conn and self._conn.is_open:\n            self._logger.info('closing queue connection')\n            self._conn.close()\n</code></pre></p> <p>\u767b\u9332\u3057\u305f\u30c7\u30fc\u30bf\u304c\u8ab0\u306b\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3055\u308c\u3066\u308b\u304b\u306f\u3053\u306e\u5f8c\u51fa\u3066\u304f\u308b\u306f\u305a\u3002</p>"},{"location":"robotshop/#rabbitmq","title":"rabbitmq","text":"<p>docker-compose.yaml &gt; docker-compose.yaml\u3063\u3066\u3067\u304d\u308b\u306e\uff1f robot-shop/payment\u306e\u306a\u304b\u306edocker-compose.yaml\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u308b\u3002python\u304b\u3089MQ\u306b\u767b\u9332\u3057\u3066\u3001\u30ad\u30e5\u30fc\u306b\u8caf\u3081\u3089\u308c\u308b\u3002\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u306f.....Go\u304b\u3002Instana\u306e\u4f9d\u5b58\u6027\u30de\u30c3\u30d7\u898b\u305f\u3089\u7406\u89e3\u3057\u3084\u3059\u3044\u3002\u3002\u307e\u3058\u3067\u5206\u304b\u3089\u3093\u306a\u3093\u3060\u3053\u308a\u3083\uff01\u3063\u3066\u72b6\u614b\u3067\u3082\u3001\u3061\u3083\u3093\u3068\u7406\u89e3\u3057\u3088\u3046\u3068\u3059\u308b\u3068Instana\u4fbf\u5229\u3067\u3059\u306d\u3002</p> <p></p>"},{"location":"robotshop/#dispatchgo","title":"Dispatch(Go)","text":"<p>RabbitMQ\u306b\u63a5\u7d9a\u3057\u3001\u6ce8\u6587\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u3066\u51e6\u7406\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3002Go\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u5206\u304b\u3089\u306a\u3044\u3002</p> <p><pre><code>msgs, err := rabbitChan.Consume(\"orders\", \"\", true, false, false, false, nil)\n</code></pre> Consume\u30e1\u30bd\u30c3\u30c9\u306e\u7b2c3\u5f15\u6570\u304ctrue\u306b\u306a\u3063\u3066\u3044\u308b\u304c\u3001\u3053\u306e\u5f15\u6570\u306fautoAck\uff08\u81ea\u52d5\u78ba\u8a8d\uff09\u3001true\u306e\u5834\u5408\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u305f\u76f4\u5f8c\u306b\u81ea\u52d5\u7684\u306bRabbitMQ\u306b\u5bfe\u3057\u3066ACK\uff08\u78ba\u8a8d\uff09\u3092\u9001\u4fe1\u3059\u308b\u3002ACK\u3092\u53d7\u3051\u53d6\u3063\u305fRabbitMQ\u306f\u305d\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30ad\u30e5\u30fc\u304b\u3089\u5b89\u5168\u306b\u524a\u9664\u3067\u304d\u308b\u3068\u5224\u65ad\u3059\u308b\u3002</p> <p>Info<p>\u3068\u3044\u3046\u3053\u3068\u306f\u3001Dispatch\u3092\u4e00\u6642\u7684\u306b\u843d\u3068\u3059\u3068\u30ad\u30e5\u30fc\u306e\u6ede\u7559\u304cInstana\u3067\u898b\u308c\u308b\u3088\u3046\u306b\u306a\u308b\uff01\u3042\u3068\u3067\u8a66\u3057\u3066\u307f\u308b\u3002</p> </p> <p>\u4ee5\u4e0b\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u3092\u5927\u307e\u304b\u306b\u8aac\u660e\u3002 1. \u30a4\u30f3\u30dd\u30fc\u30c8\u90e8:    1. amqp: RabbitMQ\u3068\u306e\u901a\u4fe1    2. opentracing: \u5206\u6563\u30c8\u30ec\u30fc\u30b7\u30f3\u30b0\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\uff08\u3053\u308c\u4eca\u306fopentelemetry\u306b\u306a\u3063\u305f\u3084\u3064\u3060\uff09    3. log,time,strconv,fmt,encoding/json \u3088\u304f\u4f7f\u3046\u3084\u3064 2. \u5b9a\u6570\u3068\u5909\u6570\u3092\u5b9a\u7fa9\uff0837\u884c\u76ee\u304f\u3089\u3044\u307e\u3067\uff09 3. connectToRabbitMQ\u95a2\u6570:    1. RabbitMQ\u306b\u63a5\u7d9a\u3092\u8a66\u307f\u308b\u95a2\u6570\u3002    2. \u63a5\u7d9a\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u306f1\u79d2\u5f85\u3063\u3066\u518d\u5ea6\u63a5\u7d9a\u3092\u8a66\u307f\u307e\u3059\u3002 4. rabbitConnector\u95a2\u6570:    1. RabbitMQ\u306b\u518d\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306e\u30eb\u30fc\u30d7\u51e6\u7406\u3002\u63a5\u7d9a\u304c\u9589\u3058\u3089\u308c\u305f\u3089\u518d\u5ea6\u63a5\u7d9a\u3092\u8a66\u307f\u308b\u3002\u307e\u305f\u3001\u4ea4\u63db\u5668\u3001\u30ad\u30e5\u30fc\u306e\u4f5c\u6210\u3084\u30ad\u30e5\u30fc\u3078\u306e\u30d0\u30a4\u30f3\u30c9\u306a\u3069\u3001RabbitMQ\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3082\u3053\u306e\u95a2\u6570\u3067\u884c\u3044\u307e\u3059\u3002 5. failOnError\u95a2\u6570:    1. \u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u7528\u306e\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3002\u30a8\u30e9\u30fc\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u3001\u30ed\u30b0\u3092\u51fa\u529b\u3057\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3057\u307e\u3059\u3002 6. getOrderId\u95a2\u6570:    1. \u6ce8\u6587\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3089\u6ce8\u6587ID\u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\u3002 7. createSpan\u95a2\u6570:    1. OpenTracing\u3092\u4f7f\u7528\u3057\u3066\u3001\u53d7\u4fe1\u3057\u305f\u6ce8\u6587\u306e\u30c8\u30ec\u30fc\u30b7\u30f3\u30b0\u60c5\u5831\u3092\u751f\u6210\u307e\u305f\u306f\u66f4\u65b0\u3057\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u3067\u306f\u3001\u30c8\u30ec\u30fc\u30b7\u30f3\u30b0\u306e\u5b50\u30b9\u30d1\u30f3\u3092\u751f\u6210\u3057\u305f\u308a\u3001\u30a8\u30e9\u30fc\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3063\u305f\u308a\u3057\u307e\u3059\u3002 8. processSale\u95a2\u6570:    1. \u6ce8\u6587\u51e6\u7406\u306e\u30c8\u30ec\u30fc\u30b7\u30f3\u30b0\u60c5\u5831\u3092\u4f5c\u6210\u3059\u308b\u95a2\u6570\u3002 9. main\u95a2\u6570:    1.  \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002     - \u4e71\u6570\u306e\u30b7\u30fc\u30c9\u3092\u521d\u671f\u5316\u3002     - \u30c8\u30ec\u30fc\u30b5\u30fc\u3092\u8a2d\u5b9a\u3002     - \u74b0\u5883\u5909\u6570\u304b\u3089RabbitMQ\u306e\u30db\u30b9\u30c8\u3084\u30a8\u30e9\u30fc\u30d1\u30fc\u30bb\u30f3\u30c6\u30fc\u30b8\u3092\u53d6\u5f97\u3002     - RabbitMQ\u3078\u306e\u63a5\u7d9a\u3084\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u6d88\u8cbb\u306a\u3069\u306e\u30eb\u30fc\u30c1\u30f3\u3092\u975e\u540c\u671f\u3067\u5b9f\u884c\u3002     - \u3053\u306e\u30b5\u30fc\u30d3\u30b9\u306f\u3001RabbitMQ\u304b\u3089\u6ce8\u6587\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u3066\u3001\u305d\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u95a2\u9023\u3059\u308b\u30c8\u30ec\u30fc\u30b7\u30f3\u30b0\u60c5\u5831\u3092\u751f\u6210/\u66f4\u65b0\u3059\u308b\u5f79\u5272\u3092\u6301\u3063\u3066\u3044\u307e\u3059</p>"},{"location":"robotshop/#mysql","title":"mySQL","text":"<pre><code>docker.io/robotshop/rs-mysql-db:2.1.0             mysqld                                                     robot-shop_mysql_1\n</code></pre>"},{"location":"robotshop/#kubernetesopenshift","title":"Kubernetes/OpenShift\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u5f8c","text":"<p>\u5404\u30b5\u30fc\u30d3\u30b9\u3068Agent\u3068\u306e\u901a\u4fe1\u306b\u3064\u3044\u3066 \u307b\u3068\u3093\u3069\u5168\u3066\u306e\u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u306b\u74b0\u5883\u5909\u6570\u3067Agent Host\u3092\u6e21\u3057\u3066\u308b\u3002 \u3069\u3053\u306eAgent\u306b\u30c7\u30fc\u30bf\u3092\u9001\u308b\u304b\uff1f\u81ea\u5206\u304c\u52d5\u3044\u3066\u3044\u308b\u30ef\u30fc\u30ab\u30fc\u30ce\u30fc\u30c9\u306eIP\u3092fieldRef.status.hostIP\u3067\u53d6\u5f97\u3057\u3066Set\u3002</p> <p>Node.js\u3068\u304b\u306fCollector\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u304c\u3001\u3053\u3044\u3064\u304cAgent\u306b\u30c7\u30fc\u30bf\u3092\u9001\u3063\u3066\u3001Agent\u304c\u30c7\u30fc\u30bf\u3092\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0/\u6574\u5f62\u3057\u3066\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b\u9001\u3063\u3066\u3044\u308b\u306e\u304b\uff01\u7406\u89e3\u3002</p> <p>fieldRef\u3067\u8272\u3005\u60c5\u5831\u53d6\u308c\u308b\u306e\u77e5\u3089\u306a\u304b\u3063\u305f\u3002()</p> <p>Information available via fieldRef  For some Pod-level fields, you can provide them to a container either as an environment variable or using a downwardAPI volume. The fields available via either mechanism are:</p> <p>You can get more detailed information from my blog post about this sample microservice application.</p> <p>This sample microservice application has been built using these technologies:</p> <p>NodeJS (Express) Java (Spring Boot) Python (Flask) Golang PHP (Apache) MongoDB Redis MySQL (Maxmind data) RabbitMQ Nginx AngularJS (1.x)</p>"},{"location":"target_public_cloud/","title":"Target public cloud","text":""},{"location":"target_public_cloud/#gcp","title":"GCP\u63a5\u7d9a\u30e1\u30e2","text":"<p>\u624b\u9806\u66f8</p> <p>\u30ed\u30fc\u30eb\u306e\u8ffd\u52a0 - bigquery.jobs.create - bigquery.tables.get - bigquery.tables.getData - bigquery.tables.list - billing.accounts.list - billing.resourceAssociation.list - compute.diskTypes.list - compute.disks.get - compute.disks.list - compute.instanceGroupManagers.get - compute.instanceGroupManagers.list - compute.instances.get - compute.instances.list - compute.instances.stop - compute.machineTypes.get - compute.machineTypes.list - compute.regions.list - compute.zones.list - logging.views.get - logging.views.list - monitoring.services.get - monitoring.services.list - monitoring.timeSeries.list - resourcemanager.folders.get - resourcemanager.folders.list - resourcemanager.organizations.get - resourcemanager.projects.get - resourcemanager.projects.list - serviceusage.services.get</p>"},{"location":"turbonomic/","title":"Turbonomi\uff43 Reporting\u6a5f\u80fd\u306e\u8ffd\u52a0","text":""},{"location":"turbonomic/#turbonomic-visualization-repository","title":"Turbonomic Visualization Repository\uff08\u30bf\u30fc\u30dc\u30ce\u30df\u30c3\u30af\u30fb\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3\u30fb\u30ec\u30dd\u30b8\u30c8\u30ea","text":"<p>https://github.com/turbonomic/visualization/tree/main Turbonomic\u3067\u4f7f\u7528\u3059\u308b\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u306e\u8a2d\u5b9a\u306b\u95a2\u3059\u308b\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30ea\u30dd\u30b8\u30c8\u30ea\u3002\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u306e\u7a2e\u985e\u306f\u30013\u3064\u306b\u5206\u985e\u3055\u308c\u3066\u3044\u307e\u3059\uff1a</p> <ol> <li>\u516c\u5f0f\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u30d3\u30eb\u30c8\u30a4\u30f3\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9 - \u3053\u308c\u3089\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067Turbonomic\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u542b\u307e\u308c\u3066\u304a\u308a\u3001\u7c21\u5358\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u305f\u3081\u306e\u57fa\u672c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3057\u3066\u3053\u3053\u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002  </li> <li>\u516c\u5f0f\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u62e1\u5f35\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9 - \u3053\u308c\u3089\u306f\u3001\u30aa\u30f3\u30c7\u30de\u30f3\u30c9\u3067Turbonomic\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002  </li> <li>\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30b5\u30dd\u30fc\u30c8 - Turbonomic\u306e\u6280\u8853\u304a\u3088\u3073\u9867\u5ba2\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306e\u30e1\u30f3\u30d0\u30fc\u306b\u3088\u3063\u3066\u4f5c\u6210\u3055\u308c\u305f\u3001\u305d\u306e\u307e\u307e\u306e\u72b6\u614b\u3067\u63d0\u4f9b\u3055\u308c\u308b\u3082\u306e\u3067\u3059\u3002  </li> </ol> <p>\u5404\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u306f\u3001Turbonomic\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4e0a\u306eGrafana\u30d9\u30fc\u30b9\u306e\u5b9f\u88c5\u3067\u3001\u30af\u30a8\u30ea\u30d3\u30eb\u30c0\u30fc\u3084\u30d3\u30b8\u30e5\u30a2\u30eb\u30c7\u30b6\u30a4\u30ca\u30fc\u3092\u901a\u3058\u3066\u8a2d\u8a08\u3055\u308c\u3001\u3053\u3053\u3067\u306f\u7c21\u5358\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u53ef\u80fd\u306aJSON\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"turbonomic/#_1","title":"\u30ec\u30dd\u30fc\u30c8\u6a5f\u80fd","text":"<p>Turbonomic \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u306f\u3001Embedded Reporting \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u542b\u307e\u308c\u3066\u304a\u308a\u3001\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u306b\u6709\u52b9\u306b\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Embedded Reporting \u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ea\u30bd\u30fc\u30b9\u7ba1\u7406\u306e\u50be\u5411\u3092\u628a\u63e1\u3057\u3001\u30ec\u30dd\u30fc\u30c8\u3084\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u3092\u4ecb\u3057\u3066\u95a2\u4fc2\u8005\u3068\u6d1e\u5bdf\u3092\u5171\u6709\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002  </p> <p>Embedded Reporting \u306f Turbonomic \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u4e00\u90e8\u3068\u3057\u3066\u3001\u72ec\u81ea\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u3057\u3066\u52d5\u4f5c\u3057\u307e\u3059\u3002\u3053\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u8981\u4ef6\u3092\u524a\u6e1b\u3057\u307e\u3059\u3002Turbonomic Reporting \u306f\u3001\u7ba1\u7406\u74b0\u5883\u306e\u5c65\u6b74\u3092\u4fdd\u5b58\u3057\u3001\u305d\u306e\u5c65\u6b74\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3092\u6a19\u6e96\u306e\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u3084\u30ec\u30dd\u30fc\u30c8\u3068\u3057\u3066\u8868\u793a\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u72ec\u81ea\u306e\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u3084\u30ec\u30dd\u30fc\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3001\u6c17\u306b\u306a\u308b\u90e8\u5206\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002</p>"}]}